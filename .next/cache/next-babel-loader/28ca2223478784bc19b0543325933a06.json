{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Calendar.js\";\nvar __jsx = React.createElement;\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment'; //import event from './event'\n\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nvar localizer = momentLocalizer(moment);\n\nvar MyCalendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyCalendar, _Component);\n\n  function MyCalendar() {\n    var _this;\n\n    _classCallCheck(this, MyCalendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyCalendar).call(this));\n    _this.state = {\n      seasonValue: 'winter',\n      yearValue: new Date().getFullYear(),\n      data: {\n        anime: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(MyCalendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var animeArr;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.jikan.moe/v3/season/2020/winter\").then(function (data) {\n                return data.json();\n              }).then(function (data) {\n                return _this2.setState({\n                  data: data\n                });\n              })[\"catch\"](function (error) {\n                return console.log(error);\n              }));\n\n            case 2:\n              animeArr = this.state.data.anime; //console.log(data.anime);\n              //console.log(this.state.data.anime[1].airing_start);\n\n              return _context.abrupt(\"return\", {\n                animeArr: animeArr\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data; //console.log(data.anime);\n      //let title = this.props.animeArr.title;\n\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(Calendar, {\n        localizer: localizer // events={[{\n        //   'title':'Test',\n        //   'start': new Date(),\n        //   'end': new Date()\n        // }]}\n        // events={this.props.aniList.map(anime =>([{\n        //   title: anime.title,\n        //   start: anime.airing_start,\n        //   end: anime.airing_start\n        // }]))}\n        ,\n        events: data.anime.map(function (anime) {\n          [{\n            'key': anime.mal_id,\n            'title': anime.title,\n            'start': anime.airing_start,\n            'end': anime.airing_start\n          }];\n        }),\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        defaultDate: moment().toDate(),\n        style: {\n          height: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MyCalendar;\n}(Component);\n\nexport { MyCalendar as default };","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Calendar.js"],"names":["Calendar","momentLocalizer","moment","fetch","React","Component","localizer","MyCalendar","state","seasonValue","yearValue","Date","getFullYear","data","anime","then","json","setState","error","console","log","animeArr","map","mal_id","title","airing_start","toDate","height"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,IAAMC,SAAS,GAAGL,eAAe,CAACC,MAAD,CAAjC;;IAEqBK,U;;;;;AACnB,wBAAa;AAAA;;AAAA;;AACX;AACF,UAAKC,KAAL,GACE;AACEC,MAAAA,WAAW,EAAE,QADf;AAEEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFb;AAGEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHR,KADF;AAFa;AAUZ;;;;;;;;;;;;;+CAMOX,KAAK,+CAAL,CACLY,IADK,CACA,UAAAF,IAAI;AAAA,uBAAIA,IAAI,CAACG,IAAL,EAAJ;AAAA,eADJ,EAELD,IAFK,CAEA,UAAAF,IAAI;AAAA,uBAAI,MAAI,CAACI,QAAL,CAAc;AAACJ,kBAAAA,IAAI,EAAJA;AAAD,iBAAd,CAAJ;AAAA,eAFJ,WAGC,UAAAK,KAAK;AAAA,uBAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,eAHN,C;;;AAMFG,cAAAA,Q,GAAW,KAAKb,KAAL,CAAWK,IAAX,CAAgBC,K,EAC/B;AACA;;+CACM;AAACO,gBAAAA,QAAQ,EAARA;AAAD,e;;;;;;;;;;;6BAGC;AAAA,UACAR,IADA,GACQ,KAAKL,KADb,CACAK,IADA,EAGP;AACA;;AACA,aACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,QAAD;AAEE,QAAA,SAAS,EAAEP,SAFb,CAGE;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAjBF;AAkBE,QAAA,MAAM,EAAEO,IAAI,CAACC,KAAL,CAAWQ,GAAX,CAAe,UAAAR,KAAK,EAAG;AAC7B,WAAC;AACC,mBAAOA,KAAK,CAACS,MADd;AAEC,qBAAST,KAAK,CAACU,KAFhB;AAGC,qBAASV,KAAK,CAACW,YAHhB;AAIC,mBAAOX,KAAK,CAACW;AAJd,WAAD;AAMD,SAPO,CAlBV;AA2BE,QAAA,aAAa,EAAC,OA3BhB;AA4BE,QAAA,WAAW,EAAC,KA5Bd;AA6BE,QAAA,WAAW,EAAEvB,MAAM,GAAGwB,MAAT,EA7Bf;AA8BE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SA9BT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAyCD;;;;EA3EqCtB,S;;SAAnBE,U","sourcesContent":["import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n//import event from './event'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react';\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default class MyCalendar extends Component {\r\n  constructor(){\r\n    super();\r\n  this.state =\r\n    {\r\n      seasonValue: 'winter',\r\n      yearValue: new Date().getFullYear(),\r\n      data: { anime: [] },\r\n      \r\n    };\r\n    \r\n  }\r\n  async componentDidMount() {\r\n\r\n    // const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n    // const data = await res.json();\r\n\r\n    await fetch(`https://api.jikan.moe/v3/season/2020/winter`)\r\n    .then(data => data.json())\r\n    .then(data => this.setState({data}))\r\n    .catch(error => console.log(error));\r\n\r\n    \r\n    var animeArr = this.state.data.anime;\r\n    //console.log(data.anime);\r\n    //console.log(this.state.data.anime[1].airing_start);\r\n    return{animeArr};\r\n    \r\n  }\r\n  render() {\r\n    const {data} = this.state;\r\n    \r\n    //console.log(data.anime);\r\n    //let title = this.props.animeArr.title;\r\n    return (\r\n      <>\r\n        <div>\r\n          \r\n          <Calendar\r\n          \r\n            localizer={localizer}\r\n            // events={[{\r\n\r\n            \r\n            //   'title':'Test',\r\n            //   'start': new Date(),\r\n            //   'end': new Date()\r\n              \r\n            // }]}\r\n            \r\n            // events={this.props.aniList.map(anime =>([{\r\n            //   title: anime.title,\r\n            //   start: anime.airing_start,\r\n            //   end: anime.airing_start\r\n\r\n            // }]))}\r\n            events={data.anime.map(anime =>{\r\n              [{\r\n                'key': anime.mal_id,\r\n                'title': anime.title,\r\n                'start': anime.airing_start,\r\n                'end': anime.airing_start\r\n              }]\r\n            })}\r\n            \r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            defaultDate={moment().toDate()}\r\n            style={{ height: 500 }}\r\n             \r\n          />\r\n           \r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}