{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Calendar.js\";\nvar __jsx = React.createElement;\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment'; //import event from './event'\n\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nconst localizer = momentLocalizer(moment);\nexport default class MyCalendar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seasonValue: 'winter',\n      yearValue: new Date().getFullYear() //data: { anime: [] },\n\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\n    const data = await res.json(); // await fetch(`https://api.jikan.moe/v3/season/2020/winter`)\n    // .then(data => data.json())\n    // .then(data => this.setState({data}))\n    // .catch(error => console.log(error));\n    // var animeArr = this.state.data.anime;\n    //console.log(data.anime);\n    //console.log(this.state.data.anime[1].airing_start);\n\n    return {\n      aniList: data.anime\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    console.log(this.props.aniList); //let title = this.props.animeArr.title;\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Calendar, {\n      localizer: localizer // events={[{\n      //   'title':'Test',\n      //   'start': new Date(),\n      //   'end': new Date()\n      // }]}\n      ,\n      events: [{\n        title: this.props.aniList,\n        //'allDay': true,\n        start: new Date(),\n        end: new Date()\n      }] // events={data.anime.map(anime =>\n      //   [{\n      //     key: anime.mal_id,\n      //     title: anime.title,\n      //     start: anime.airing_start,\n      //     end: anime.airing_start\n      //   }]\n      // )}\n      ,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      defaultDate: moment().toDate(),\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Calendar.js"],"names":["Calendar","momentLocalizer","moment","fetch","React","Component","localizer","MyCalendar","constructor","state","seasonValue","yearValue","Date","getFullYear","componentDidMount","res","data","json","aniList","anime","render","console","log","props","title","start","end","toDate","height"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,SAAS,GAAGL,eAAe,CAACC,MAAD,CAAjC;AAEA,eAAe,MAAMK,UAAN,SAAyBF,SAAzB,CAAmC;AAChDG,EAAAA,WAAW,GAAE;AACX;AACF,SAAKC,KAAL,GACE;AACEC,MAAAA,WAAW,EAAE,QADf;AAEEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFb,CAGE;;AAHF,KADF;AAQC;;AACD,QAAMC,iBAAN,GAA0B;AAExB,UAAMC,GAAG,GAAG,MAAMZ,KAAK,CAAE,6CAAF,CAAvB;AACA,UAAMa,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CAHwB,CAKxB;AACA;AACA;AACA;AAGA;AACA;AACA;;AACA,WAAO;AAAEC,MAAAA,OAAO,EAAEF,IAAI,CAACG;AAAhB,KAAP;AAED;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACJ,MAAAA;AAAD,QAAS,KAAKP,KAApB;AAEAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,OAAvB,EAHO,CAIP;;AACA,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,QAAD;AACE,MAAA,SAAS,EAAEZ,SADb,CAEE;AAGA;AACA;AACA;AAEA;AATF;AAWE,MAAA,MAAM,EAAE,CAAC;AAEPkB,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWL,OAFX;AAIP;AACAO,QAAAA,KAAK,EAAE,IAAIb,IAAJ,EALA;AAMPc,QAAAA,GAAG,EAAE,IAAId,IAAJ;AANE,OAAD,CAXV,CAoBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BF;AA6BE,MAAA,aAAa,EAAC,OA7BhB;AA8BE,MAAA,WAAW,EAAC,KA9Bd;AA+BE,MAAA,WAAW,EAAEV,MAAM,GAAGyB,MAAT,EA/Bf;AAgCE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAhCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AA2CD;;AA7E+C","sourcesContent":["import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n//import event from './event'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react';\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default class MyCalendar extends Component {\r\n  constructor(){\r\n    super();\r\n  this.state =\r\n    {\r\n      seasonValue: 'winter',\r\n      yearValue: new Date().getFullYear()\r\n      //data: { anime: [] },\r\n      \r\n    };\r\n    \r\n  }\r\n  async componentDidMount() {\r\n\r\n    const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n    const data = await res.json();\r\n\r\n    // await fetch(`https://api.jikan.moe/v3/season/2020/winter`)\r\n    // .then(data => data.json())\r\n    // .then(data => this.setState({data}))\r\n    // .catch(error => console.log(error));\r\n\r\n    \r\n    // var animeArr = this.state.data.anime;\r\n    //console.log(data.anime);\r\n    //console.log(this.state.data.anime[1].airing_start);\r\n    return { aniList: data.anime};\r\n    \r\n  }\r\n  render() {\r\n    const {data} = this.state;\r\n    \r\n    console.log(this.props.aniList);\r\n    //let title = this.props.animeArr.title;\r\n    return (\r\n      <>\r\n        <div>\r\n          \r\n          <Calendar\r\n            localizer={localizer}\r\n            // events={[{\r\n\r\n            \r\n            //   'title':'Test',\r\n            //   'start': new Date(),\r\n            //   'end': new Date()\r\n              \r\n            // }]}\r\n            \r\n            events={[{\r\n\r\n              title: this.props.aniList,\r\n              \r\n              //'allDay': true,\r\n              start: new Date(),\r\n              end: new Date()\r\n\r\n            }]}\r\n            // events={data.anime.map(anime =>\r\n            //   [{\r\n            //     key: anime.mal_id,\r\n            //     title: anime.title,\r\n            //     start: anime.airing_start,\r\n            //     end: anime.airing_start\r\n            //   }]\r\n            // )}\r\n            \r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            defaultDate={moment().toDate()}\r\n            style={{ height: 500 }}\r\n             \r\n          />\r\n           \r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}