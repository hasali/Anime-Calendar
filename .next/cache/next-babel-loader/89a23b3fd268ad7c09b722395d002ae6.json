{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react'; //import Layout from '../components/MyLayout.js';\n//import Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport Popover from '@material-ui/core/Popover'; //import MyCalendar from '../components/Calendar.js'\n\nimport MouseOverPopover from '../components/popover.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography'; //import { Popover } from '@material-ui/core';\n\nimport Button from '@material-ui/core/Button';\nconst localizer = momentLocalizer(moment);\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n})); // const Event = event =>{\n//   <span>\n//     <strong>{event.title}</strong>\n//   </span>\n// }\n// const EventAgenda = event=>{\n//   <span>\n//      <em style={{ color: 'magenta' }}>{event.title}</em>\n//     <p>{event.desc}</p>\n//   </span>\n// }\n\nconst MyCalendar = props => {\n  function EventPop(event) {\n    // return(\n    // alert(event.title)\n    // );\n    //console.log(event.title);\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handlePopoverOpen = event => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    return __jsx(React.Fragment, null, __jsx(Typography, {\n      onMouseEnter: handlePopoverOpen,\n      onMouseLeave: handlePopoverClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, event.title), __jsx(Popover, {\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      onClose: handlePopoverClose,\n      disableRestoreFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, event.image));\n  }\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    popup: true,\n    localizer: localizer,\n    events: props.animeArr,\n    startAccessor: \"start\",\n    endAccessor: \"end\" //onSelectEvent={EventPop}\n    ,\n    defaultDate: moment().toDate(),\n    style: {\n      height: 500\n    },\n    components: {\n      event: EventPop\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), __jsx(MouseOverPopover, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: props.animeArr[0].image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })));\n};\n\nMyCalendar.getInitialProps = async function () {\n  const res = await fetch('https://api.jikan.moe/v3/season/');\n  const data = await res.json();\n  var animeArr = data.anime.map(anime => ({\n    title: anime.title,\n    start: anime.airing_start,\n    end: anime.airing_start,\n    image: anime.image_url\n  }));\n  console.log(`${animeArr[0].image}`);\n  console.log(`${animeArr[0].title}`);\n  return {\n    animeArr\n  };\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","fetch","Calendar","momentLocalizer","moment","Popover","MouseOverPopover","makeStyles","Typography","Button","localizer","useStyles","theme","popover","pointerEvents","paper","padding","spacing","MyCalendar","props","EventPop","event","classes","anchorEl","setAnchorEl","useState","handlePopoverOpen","currentTarget","handlePopoverClose","open","Boolean","title","vertical","horizontal","image","animeArr","toDate","height","getInitialProps","res","data","json","anime","map","start","airing_start","end","image_url","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Layout from '../components/MyLayout.js';\r\n//import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport Popover from '@material-ui/core/Popover';\r\n//import MyCalendar from '../components/Calendar.js'\r\nimport MouseOverPopover from '../components/popover.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import { Popover } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}))\r\n\r\n\r\n\r\n\r\n// const Event = event =>{\r\n//   <span>\r\n//     <strong>{event.title}</strong>\r\n//   </span>\r\n// }\r\n// const EventAgenda = event=>{\r\n//   <span>\r\n//      <em style={{ color: 'magenta' }}>{event.title}</em>\r\n//     <p>{event.desc}</p>\r\n//   </span>\r\n// }\r\n\r\n\r\n\r\n\r\nconst MyCalendar = props => {\r\n  \r\n  function EventPop(event) {\r\n    // return(\r\n    // alert(event.title)\r\n    // );\r\n    //console.log(event.title);\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n    return (\r\n      <>\r\n     \r\n        <Typography\r\n          \r\n          onMouseEnter={handlePopoverOpen}\r\n          onMouseLeave={handlePopoverClose}\r\n\r\n        >\r\n          {event.title}\r\n        </Typography>\r\n\r\n        <Popover\r\n          \r\n          className={classes.popover}\r\n          classes={{\r\n            paper: classes.paper,\r\n          }}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n          onClose={handlePopoverClose}\r\n          disableRestoreFocus\r\n        >\r\n         {event.image}\r\n        </Popover>\r\n      </>\r\n    )\r\n  \r\n\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n\r\n\r\n        <Calendar\r\n          \r\n          popup\r\n          localizer={localizer}\r\n          events={props.animeArr}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          //onSelectEvent={EventPop}\r\n          defaultDate={moment().toDate()}\r\n          style={{ height: 500 }}\r\n          components={{event: EventPop}}\r\n        \r\n        />\r\n\r\n        <MouseOverPopover />\r\n      </div>\r\n      <div>\r\n        <img src ={props.animeArr[0].image}/>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nMyCalendar.getInitialProps = async function () {\r\n  const res = await fetch('https://api.jikan.moe/v3/season/');\r\n  const data = await res.json();\r\n\r\n\r\n  var animeArr = data.anime.map(anime => ({\r\n    title: anime.title,\r\n    start: anime.airing_start,\r\n    end: anime.airing_start,\r\n    image: anime.image_url\r\n  }\r\n\r\n  ));\r\n  console.log(`${animeArr[0].image}`);\r\n  console.log(`${animeArr[0].title}`);\r\n  return {\r\n    animeArr\r\n    \r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}