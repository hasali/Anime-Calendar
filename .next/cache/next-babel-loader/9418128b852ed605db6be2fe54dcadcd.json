{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Dailies.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport styles from '../assets/css/dailies.module.css';\nimport { getSeason } from '../assets/Helpers.js';\n\nconst Dailies = props => {\n  const {\n    0: hasError,\n    1: setErrors\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    anime: []\n  });\n  const today = new Date();\n  var dailyArr;\n\n  async function fetchData() {\n    const res = await fetch(`https://api.jikan.moe/v3/season/${props.currYear}/${getSeason(props.currMonth)}`);\n    res.json().then(res => setData(res)).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function formatDate(date) {\n    var newDate = new moment(date);\n    return newDate.format('MM/DD/YYYY');\n  }\n\n  dailyArr = data.anime.filter(anime => {\n    if (formatDate(anime.airing_start) !== formatDate(today)) {\n      return false;\n    }\n\n    return true;\n  }).map(anime => {\n    return anime;\n  });\n\n  if (dailyArr.length == 0) {\n    return __jsx(\"div\", {\n      className: styles.altmsg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }, \"*No anime released today :(\");\n  }\n\n  console.log(dailyArr);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: styles.noBullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, dailyArr.map(anime => __jsx(\"li\", {\n    key: anime.mal_id,\n    className: styles.formatList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: styles.carddimension + \" card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    style: props.isDark ? {\n      color: 'white'\n    } : null,\n    href: anime.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, anime.title)), __jsx(\"img\", {\n    src: anime.image_url,\n    style: {\n      height: '212px',\n      width: '150px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default Dailies;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Dailies.js"],"names":["React","useState","useEffect","fetch","moment","styles","getSeason","Dailies","props","hasError","setErrors","data","setData","anime","today","Date","dailyArr","fetchData","res","currYear","currMonth","json","then","catch","err","formatDate","date","newDate","format","filter","airing_start","map","length","altmsg","console","log","noBullet","mal_id","formatList","carddimension","title","isDark","color","url","image_url","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport fetch from 'isomorphic-unfetch';\r\nimport moment from 'moment'\r\nimport styles from '../assets/css/dailies.module.css'\r\nimport {getSeason} from '../assets/Helpers.js';\r\nconst Dailies = (props) => {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [data, setData] = useState({ anime: [] });\r\n    const today = new Date();\r\n\r\n    var dailyArr;\r\n    \r\n    async function fetchData() {\r\n        const res = await fetch(`https://api.jikan.moe/v3/season/${props.currYear}/${getSeason(props.currMonth)}`);\r\n        res\r\n            .json()\r\n            .then(res => setData(res))\r\n            .catch(err => setErrors(err));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    function formatDate(date) {\r\n        var newDate = new moment(date);\r\n        return newDate.format('MM/DD/YYYY');\r\n    }\r\n\r\n    dailyArr = data.anime.filter(anime => {\r\n        if (formatDate(anime.airing_start) !== formatDate(today)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }).map(anime => { return anime });\r\n\r\n    if (dailyArr.length == 0) {\r\n        return <div className={styles.altmsg}>*No anime released today :(</div>\r\n    }\r\n\r\n    console.log(dailyArr);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* <p>{dataArr[0].title}</ p> */}\r\n            <ul className={styles.noBullet}>\r\n                {dailyArr.map(anime => (\r\n\r\n                    <li key={anime.mal_id} className={styles.formatList}>\r\n                        <div className={styles.carddimension + \" card\"} >\r\n                            \r\n                            <div className={styles.title}>\r\n                                <a style={props.isDark?{color:'white'}:null}href={anime.url} >{anime.title}</a>\r\n                            </div>\r\n                            <img src={anime.image_url} style={{height:'212px',width:'150px'}}/>\r\n                        </div>\r\n                    </li>\r\n\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Dailies;"]},"metadata":{},"sourceType":"module"}