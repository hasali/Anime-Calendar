{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Calendar.js\";\nvar __jsx = React.createElement;\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment'; //import event from './event'\n\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst localizer = momentLocalizer(moment);\nexport default class MyCalendar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seasonValue: 'winter',\n      yearValue: new Date().getFullYear(),\n      data: {\n        anime: []\n      }\n    };\n  }\n\n  async componentDidMount() {\n    // const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\n    // const data = await res.json();\n    await fetch(`https://api.jikan.moe/v3/season/2020/winter`).then(data => data.json()).then(data => this.setState({\n      data\n    })).catch(error => console.log(error)); //var animeArr = data.anime;\n    //console.log(data.anime);\n    //console.log(this.state.data.anime[1].airing_start);\n    //return{animeArr};\n  }\n\n  render() {\n    const {\n      data\n    } = this.state; //console.log(this.props.animeArr);\n    //let title = this.props.animeArr.title;\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Calendar, {\n      localizer: localizer // events={[{\n      //   'title':'Test',\n      //   'start': new Date(),\n      //   'end': new Date()\n      // }]}\n      // events={this.props.aniList.map(anime =>([{\n      //   title: anime.title,\n      //   start: anime.airing_start,\n      //   end: anime.airing_start\n      // }]))}\n      ,\n      events: data.anime.map(function (anime) {\n        return [{\n          'key': anime.mal_id,\n          'title': anime.title,\n          'start': anime.airing_start,\n          'end': anime.airing_start\n        }];\n      }),\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      defaultDate: moment().toDate(),\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n\n}\nMyCalendar.propTypes = {\n  data: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Calendar.js"],"names":["Calendar","momentLocalizer","moment","fetch","React","Component","PropTypes","localizer","MyCalendar","constructor","state","seasonValue","yearValue","Date","getFullYear","data","anime","componentDidMount","then","json","setState","catch","error","console","log","render","map","mal_id","title","airing_start","toDate","height","propTypes","string"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,MAAMC,SAAS,GAAGN,eAAe,CAACC,MAAD,CAAjC;AAEA,eAAe,MAAMM,UAAN,SAAyBH,SAAzB,CAAmC;AAChDI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GACA;AACEC,MAAAA,WAAW,EAAE,QADf;AAEEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFb;AAGEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAHR,KADA;AAQD;;AACD,QAAMC,iBAAN,GAA0B;AAExB;AACA;AAEA,UAAMd,KAAK,CAAE,6CAAF,CAAL,CACHe,IADG,CACEH,IAAI,IAAIA,IAAI,CAACI,IAAL,EADV,EAEHD,IAFG,CAEEH,IAAI,IAAI,KAAKK,QAAL,CAAc;AAAEL,MAAAA;AAAF,KAAd,CAFV,EAGHM,KAHG,CAGGC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHZ,CAAN,CALwB,CAWxB;AACA;AACA;AACA;AAED;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAW,KAAKL,KAAtB,CADO,CAGP;AACA;;AACA,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,QAAD;AAEE,MAAA,SAAS,EAAEH,SAFb,CAGE;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAjBF;AAkBE,MAAA,MAAM,EAAEQ,IAAI,CAACC,KAAL,CAAWU,GAAX,CAAe,UAASV,KAAT,EAAiB;AACtC,eACA,CACE;AACE,iBAAOA,KAAK,CAACW,MADf;AAEE,mBAASX,KAAK,CAACY,KAFjB;AAGE,mBAASZ,KAAK,CAACa,YAHjB;AAIE,iBAAOb,KAAK,CAACa;AAJf,SADF,CADA;AAUD,OAXO,CAlBV;AA+BE,MAAA,aAAa,EAAC,OA/BhB;AAgCE,MAAA,WAAW,EAAC,KAhCd;AAiCE,MAAA,WAAW,EAAE3B,MAAM,GAAG4B,MAAT,EAjCf;AAkCE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAlCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AA6CD;;AA/E+C;AAmFlDvB,UAAU,CAACwB,SAAX,GAAuB;AAACjB,EAAAA,IAAI,EAAET,SAAS,CAAC2B;AAAjB,CAAvB","sourcesContent":["import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n//import event from './event'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default class MyCalendar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state =\r\n    {\r\n      seasonValue: 'winter',\r\n      yearValue: new Date().getFullYear(),\r\n      data: { anime: [] },\r\n\r\n    };\r\n\r\n  }\r\n  async componentDidMount() {\r\n\r\n    // const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n    // const data = await res.json();\r\n\r\n    await fetch(`https://api.jikan.moe/v3/season/2020/winter`)\r\n      .then(data => data.json())\r\n      .then(data => this.setState({ data }))\r\n      .catch(error => console.log(error));\r\n\r\n\r\n    //var animeArr = data.anime;\r\n    //console.log(data.anime);\r\n    //console.log(this.state.data.anime[1].airing_start);\r\n    //return{animeArr};\r\n\r\n  }\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    //console.log(this.props.animeArr);\r\n    //let title = this.props.animeArr.title;\r\n    return (\r\n      <>\r\n        <div>\r\n\r\n          <Calendar\r\n\r\n            localizer={localizer}\r\n            // events={[{\r\n\r\n\r\n            //   'title':'Test',\r\n            //   'start': new Date(),\r\n            //   'end': new Date()\r\n\r\n            // }]}\r\n\r\n            // events={this.props.aniList.map(anime =>([{\r\n            //   title: anime.title,\r\n            //   start: anime.airing_start,\r\n            //   end: anime.airing_start\r\n\r\n            // }]))}\r\n            events={data.anime.map(function(anime)  {\r\n              return(\r\n              [\r\n                {\r\n                  'key': anime.mal_id,\r\n                  'title': anime.title,\r\n                  'start': anime.airing_start,\r\n                  'end': anime.airing_start\r\n                }\r\n              ])\r\n\r\n            })}\r\n\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            defaultDate={moment().toDate()}\r\n            style={{ height: 500 }}\r\n\r\n          />\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nMyCalendar.propTypes = {data: PropTypes.string };"]},"metadata":{},"sourceType":"module"}