{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Dailies.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from 'isomorphic-unfetch';\n\nvar Dailies = function Dailies() {\n  var _useState = useState(false),\n      hasError = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState({\n    anime: []\n  }),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  function fetchData() {\n    var res;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.jikan.moe/v3/season/2020/spring'));\n\n          case 2:\n            res = _context.sent;\n            res.json().then(function (res) {\n              return setData(res);\n            })[\"catch\"](function (err) {\n              return setErrors(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var dataArr = data.anime.map(function (anime) {\n    return {\n      title: anime.title\n    };\n  });\n  console.log(dataArr);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, data.anime.map(function (anime) {\n    return __jsx(\"li\", {\n      key: anime.mal_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: anime.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, anime.title));\n  })));\n}; // const Dailies = props => {\n//     console.log(`${props.dailyArr[1].title}`)\n//     return(\n//     <div>\n//         <h3>{props.dailyArr[0].title}</h3>\n//     </div>\n//     )\n// }\n// Dailies.getStaticProps = async function () {\n//     const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\n//     const data = await res.json();\n//     var today = new Date();\n//     var dailyArr = data.anime.map(anime => ({\n//         title: anime.title,\n//         date: anime.airing_start,\n//         image: anime.image_url\n//     }));\n//     // for (var i = 0; i < data.length; i++) {\n//     //     if (data.anime[i].airing_start == today) {\n//     //          dailyArr = data.anime.map(anime => ({\n//     //             title: anime.title,\n//     //             date: anime.airing_start,\n//     //             image: anime.image_url\n//     //         }));\n//     //     }\n//     // }\n//     console.log(dailyArr);\n//     console.log(data.anime[0].title);\n//     return { dailyArr }\n//}\n\n\nexport default Dailies;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Dailies.js"],"names":["React","useState","useEffect","fetch","Dailies","hasError","setErrors","anime","data","setData","fetchData","res","json","then","err","dataArr","map","title","console","log","mal_id","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACYH,QAAQ,CAAC,KAAD,CADpB;AAAA,MACXI,QADW;AAAA,MACDC,SADC;;AAAA,mBAEML,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAE;AAAR,GAAD,CAFd;AAAA,MAEXC,IAFW;AAAA,MAELC,OAFK;;AAIlB,WAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACsBP,KAAK,CAAC,6CAAD,CAD3B;;AAAA;AACUQ,YAAAA,GADV;AAEIA,YAAAA,GAAG,CACEC,IADL,GAEKC,IAFL,CAEU,UAAAF,GAAG;AAAA,qBAAIF,OAAO,CAACE,GAAD,CAAX;AAAA,aAFb,WAGW,UAAAG,GAAG;AAAA,qBAAIR,SAAS,CAACQ,GAAD,CAAb;AAAA,aAHd;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAZ,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,SAAS;AAEZ,GAHQ,EAGP,EAHO,CAAT;AAIA,MAAMK,OAAO,GAAGP,IAAI,CAACD,KAAL,CAAWS,GAAX,CAAe,UAAAT,KAAK;AAAA,WAAK;AACrCU,MAAAA,KAAK,EAAEV,KAAK,CAACU;AADwB,KAAL;AAAA,GAApB,CAAhB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,IAAI,CAACD,KAAL,CAAWS,GAAX,CAAe,UAAAT,KAAK;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACa,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAEb,KAAK,CAACc,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBd,KAAK,CAACU,KAA3B,CADJ,CADiB;AAAA,GAApB,CADL,CAFJ,CAFJ;AAaH,CAlCD,C,CAmCA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AACA,eAAeb,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Dailies = () => {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [data, setData] = useState({anime: []});\r\n\r\n    async function fetchData() {\r\n        const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\r\n        res\r\n            .json()\r\n            .then(res => setData(res))\r\n            .catch(err => setErrors(err));\r\n\r\n        \r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n        \r\n    },[]);\r\n    const dataArr = data.anime.map(anime => ({\r\n        title: anime.title\r\n    }));\r\n    console.log(dataArr);\r\n    return (\r\n        \r\n        <div>\r\n            {/* <p>{dataArr[0].title}</p> */}\r\n            <ul>\r\n                {data.anime.map(anime => (\r\n                    <li key={anime.mal_id}>\r\n                        <a href={anime.url}>{anime.title}</a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n// const Dailies = props => {\r\n//     console.log(`${props.dailyArr[1].title}`)\r\n//     return(\r\n        \r\n//     <div>\r\n//         <h3>{props.dailyArr[0].title}</h3>\r\n//     </div>\r\n//     )\r\n\r\n// }\r\n\r\n// Dailies.getStaticProps = async function () {\r\n\r\n//     const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\r\n//     const data = await res.json();\r\n//     var today = new Date();\r\n//     var dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n//         title: anime.title,\r\n//         date: anime.airing_start,\r\n//         image: anime.image_url\r\n//     }));\r\n//     // for (var i = 0; i < data.length; i++) {\r\n//     //     if (data.anime[i].airing_start == today) {\r\n//     //          dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n//     //             title: anime.title,\r\n//     //             date: anime.airing_start,\r\n//     //             image: anime.image_url\r\n//     //         }));\r\n//     //     }\r\n//     // }\r\n\r\n//     console.log(dailyArr);\r\n\r\n//     console.log(data.anime[0].title);\r\n//     return { dailyArr }\r\n//}\r\nexport default Dailies;"]},"metadata":{},"sourceType":"module"}