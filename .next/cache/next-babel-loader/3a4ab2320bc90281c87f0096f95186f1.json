{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      seasonValue: 'winter',\n      yearValue: new Date().getFullYear(),\n      data: {\n        anime: []\n      }\n    };\n  }\n\n  handleChange(e) {\n    // var season2 = seasonValue;\n    this.setState({\n      seasonValue: e.target.value\n    }); //   if(this.state !== ''){\n    //   const res = await fetch(`https://api.jikan.moe/v3/season/2020/${this.state.seasonValue}`);\n    //   const data = await res.json();\n    //   console.log(this.state);\n    //   console.log(data.anime);\n    //   return {\n    //     anilist: data.anime,\n    //     seasonName: data.season_name,\n    //     seasonYear: data.season_year\n    //   }\n    // }\n  }\n\n  async componentDidUpdate() {\n    //Is this check  necessary??\n    if (this.state.seasonValue !== '') {\n      await fetch(`https://api.jikan.moe/v3/season/${this.state.yearValue}/${this.state.seasonValue}`).then(data => data.json()).then(data => this.setState({\n        data\n      }));\n      console.log({\n        yearValue\n      }); // return {\n      //   anilist: data.anime,\n      //   seasonName: data.season_name,\n      //   seasonYear: data.season_year\n      // }\n    }\n  } // static async componentDidMount() {\n  //   if (this.state == null) {\n  //     await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\n  //     .then(data => data.json())\n  //     .then(data => this.setState({data}));\n  //     console.log(`Show data fetched. Count: ${data.anime.length}`);\n  //     console.log(`Season: ${data.season_name}`);\n  //     // return {\n  //     //   anilist: data.anime,\n  //     //   seasonName: data.season_name,\n  //     //   seasonYear: data.season_year\n  //     // };\n  //   }\n  // }\n\n\n  render() {\n    //console.log(this.state)\n    const {\n      data\n    } = this.state;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      value: this.state.seasonValue,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"winter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Winter\"), __jsx(\"option\", {\n      value: \"spring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Spring\"), __jsx(\"option\", {\n      value: \"summer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Summer\"), __jsx(\"option\", {\n      value: \"fall\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Fall\")), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, data.anime.season_name, \" \", data.anime.season_year), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, data.anime.map(anime => {\n      return __jsx(\"li\", {\n        key: anime.mal_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/p/[id]\",\n        as: `/p/${anime.mal_id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, anime.title)));\n    })));\n  }\n\n} // const Index = props => (\n//   //Something isn't right about the logic here. Maybe dropdown shouldn't be here.\n//   <Layout>\n//     {/* <select value={props.value} onChange={props.handleChange}>\n//       <option value = \"winter\">Winter</option>\n//       <option value = \"spring\">Spring</option>\n//       <option value = \"summer\">Summer</option>\n//       <option value = \"fall\">Fall</option>\n//     </select> */}\n//     <h1>{props.seasonName} {props.seasonYear}</h1>\n//     <ul>\n//       {props.anilist.map(anime => (\n//           <li key = {anime.mal_id}>\n//             <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\n//               <a>{anime.title}</a>\n//             </Link>\n//           </li>\n//         ))}\n//     </ul>\n//   </Layout>\n// );\n// // Index.getInitialState = function(){\n// //   return {seasonValue: 'winter'};\n// // };\n// // Index.handleChange = function(e){\n// //    this.setState({seasonValue:e.target.value});\n// // }\n// Index.getInitialProps = async function() {\n//   const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.anime.length}`);\n//   console.log(`Season: ${data.season_name}`);\n//   return {\n//     anilist: data.anime,\n//     seasonName: data.season_name,\n//     seasonYear: data.season_year\n//   };\n// };\n// // Index.componentDidUpdate = function(){\n// // }\n// export default Index;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Layout","Link","fetch","Index","Component","constructor","props","handleChange","bind","state","seasonValue","yearValue","Date","getFullYear","data","anime","e","setState","target","value","componentDidUpdate","then","json","console","log","render","season_name","season_year","map","mal_id","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Layout from '../components/MyLayout.js';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state =\r\n    {\r\n      seasonValue: 'winter',\r\n      yearValue: new Date().getFullYear(),\r\n\r\n      data: { anime: [] }\r\n    };\r\n  }\r\n\r\n  handleChange(e) {\r\n    // var season2 = seasonValue;\r\n    this.setState({ seasonValue: e.target.value});\r\n\r\n    //   if(this.state !== ''){\r\n\r\n\r\n    //   const res = await fetch(`https://api.jikan.moe/v3/season/2020/${this.state.seasonValue}`);\r\n    //   const data = await res.json();\r\n\r\n    //   console.log(this.state);\r\n    //   console.log(data.anime);\r\n\r\n    //   return {\r\n    //     anilist: data.anime,\r\n    //     seasonName: data.season_name,\r\n    //     seasonYear: data.season_year\r\n    //   }\r\n    // }\r\n\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    //Is this check  necessary??\r\n    \r\n    \r\n    if (this.state.seasonValue !== '') {\r\n\r\n\r\n      await fetch(`https://api.jikan.moe/v3/season/${this.state.yearValue}/${this.state.seasonValue}`)\r\n        .then(data => data.json())\r\n        .then(data => this.setState({ data }));\r\n\r\n\r\n      console.log({yearValue});\r\n    \r\n      // return {\r\n      //   anilist: data.anime,\r\n      //   seasonName: data.season_name,\r\n      //   seasonYear: data.season_year\r\n      // }\r\n    }\r\n  }\r\n  // static async componentDidMount() {\r\n\r\n  //   if (this.state == null) {\r\n\r\n  //     await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\r\n  //     .then(data => data.json())\r\n  //     .then(data => this.setState({data}));\r\n\r\n\r\n  //     console.log(`Show data fetched. Count: ${data.anime.length}`);\r\n  //     console.log(`Season: ${data.season_name}`);\r\n\r\n\r\n  //     // return {\r\n  //     //   anilist: data.anime,\r\n  //     //   seasonName: data.season_name,\r\n  //     //   seasonYear: data.season_year\r\n  //     // };\r\n  //   }\r\n  // }\r\n  render() {\r\n    //console.log(this.state)\r\n    const { data } = this.state;\r\n    return (\r\n      \r\n      <React.Fragment>\r\n       \r\n        <select value={this.state.seasonValue} onChange={this.handleChange}>\r\n          <option value=\"winter\">Winter</option>\r\n          <option value=\"spring\">Spring</option>\r\n          <option value=\"summer\">Summer</option>\r\n          <option value=\"fall\">Fall</option>\r\n        </select>\r\n\r\n\r\n        <h1>{data.anime.season_name} {data.anime.season_year}</h1>\r\n\r\n        <ul>\r\n\r\n          {data.anime.map(anime => {\r\n            return (\r\n              <li key={anime.mal_id}>\r\n                <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\r\n                  <a>{anime.title}</a>\r\n                </Link>\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </React.Fragment>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n// const Index = props => (\r\n//   //Something isn't right about the logic here. Maybe dropdown shouldn't be here.\r\n//   <Layout>\r\n\r\n//     {/* <select value={props.value} onChange={props.handleChange}>\r\n//       <option value = \"winter\">Winter</option>\r\n//       <option value = \"spring\">Spring</option>\r\n//       <option value = \"summer\">Summer</option>\r\n//       <option value = \"fall\">Fall</option>\r\n//     </select> */}\r\n//     <h1>{props.seasonName} {props.seasonYear}</h1>\r\n//     <ul>\r\n//       {props.anilist.map(anime => (\r\n//           <li key = {anime.mal_id}>\r\n//             <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\r\n//               <a>{anime.title}</a>\r\n//             </Link>\r\n//           </li>\r\n//         ))}\r\n//     </ul>\r\n//   </Layout>\r\n\r\n// );\r\n// // Index.getInitialState = function(){\r\n// //   return {seasonValue: 'winter'};\r\n\r\n// // };\r\n// // Index.handleChange = function(e){\r\n\r\n// //    this.setState({seasonValue:e.target.value});\r\n\r\n\r\n\r\n// // }\r\n\r\n// Index.getInitialProps = async function() {\r\n\r\n\r\n\r\n//   const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n//   const data = await res.json();\r\n\r\n//   console.log(`Show data fetched. Count: ${data.anime.length}`);\r\n//   console.log(`Season: ${data.season_name}`);\r\n\r\n\r\n//   return {\r\n//     anilist: data.anime,\r\n//     seasonName: data.season_name,\r\n//     seasonYear: data.season_year\r\n//   };\r\n\r\n// };\r\n// // Index.componentDidUpdate = function(){\r\n\r\n// // }\r\n\r\n// export default Index;\r\n"]},"metadata":{},"sourceType":"module"}