{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Dailies.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport styles from '../assets/css/dailies.module.css';\n\nvar Dailies = function Dailies(props) {\n  _s();\n\n  var _useState = useState(false),\n      hasError = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState({\n    anime: []\n  }),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var today = new Date();\n  var dailyArr;\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.jikan.moe/v3/season/\".concat(props.currYear, \"/\").concat(props.currMonth));\n\n            case 2:\n              res = _context.sent;\n              res.json().then(function (res) {\n                return setData(res);\n              })[\"catch\"](function (err) {\n                return setErrors(err);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  function formatDate(date) {\n    var newDate = new moment(date);\n    return newDate.format('MM/DD/YYYY');\n  }\n\n  dailyArr = data.anime.filter(function (anime) {\n    if (formatDate(anime.airing_start) !== formatDate(today)) {\n      return false;\n    }\n\n    return true;\n  }).map(function (anime) {\n    return anime;\n  });\n\n  if (dailyArr.length == 0) {\n    return __jsx(\"div\", {\n      className: styles.altmsg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }, \"*No anime released today :(\");\n  }\n\n  console.log(dailyArr);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: styles.noBullet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, dailyArr.map(function (anime) {\n    return __jsx(\"li\", {\n      key: anime.mal_id,\n      className: styles.formatList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: styles.carddimension + \" card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: styles.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      style: props.isDark ? {\n        color: 'white'\n      } : null,\n      href: anime.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, anime.title)), __jsx(\"img\", {\n      src: anime.image_url,\n      style: {\n        height: '212px',\n        width: '150px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    })));\n  })));\n};\n\n_s(Dailies, \"RrFq27tjWqR+PDdUQ2GnoR4Dmtk=\");\n\n_c = Dailies;\nexport default Dailies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dailies\");","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Dailies.js"],"names":["React","useState","useEffect","fetch","moment","styles","Dailies","props","hasError","setErrors","anime","data","setData","today","Date","dailyArr","fetchData","currYear","currMonth","res","json","then","err","formatDate","date","newDate","format","filter","airing_start","map","length","altmsg","console","log","noBullet","mal_id","formatList","carddimension","title","isDark","color","url","image_url","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport fetch from 'isomorphic-unfetch';\r\nimport moment from 'moment'\r\nimport styles from '../assets/css/dailies.module.css'\r\n\r\nconst Dailies = (props) => {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [data, setData] = useState({ anime: [] });\r\n    const today = new Date();\r\n\r\n    var dailyArr;\r\n    \r\n    async function fetchData() {\r\n        const res = await fetch(`https://api.jikan.moe/v3/season/${props.currYear}/${props.currMonth}`);\r\n        res\r\n            .json()\r\n            .then(res => setData(res))\r\n            .catch(err => setErrors(err));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    function formatDate(date) {\r\n        var newDate = new moment(date);\r\n        return newDate.format('MM/DD/YYYY');\r\n    }\r\n\r\n    dailyArr = data.anime.filter(anime => {\r\n        if (formatDate(anime.airing_start) !== formatDate(today)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }).map(anime => { return anime });\r\n\r\n    if (dailyArr.length == 0) {\r\n        return <div className={styles.altmsg}>*No anime released today :(</div>\r\n    }\r\n\r\n    console.log(dailyArr);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* <p>{dataArr[0].title}</ p> */}\r\n            <ul className={styles.noBullet}>\r\n                {dailyArr.map(anime => (\r\n\r\n                    <li key={anime.mal_id} className={styles.formatList}>\r\n                        <div className={styles.carddimension + \" card\"} >\r\n                            \r\n                            <div className={styles.title}>\r\n                                <a style={props.isDark?{color:'white'}:null}href={anime.url} >{anime.title}</a>\r\n                            </div>\r\n                            <img src={anime.image_url} style={{height:'212px',width:'150px'}}/>\r\n                        </div>\r\n                    </li>\r\n\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Dailies;"]},"metadata":{},"sourceType":"module"}