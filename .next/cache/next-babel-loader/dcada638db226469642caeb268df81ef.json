{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react'; //import Layout from '../components/MyLayout.js';\n//import Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport Popover from '@material-ui/core/Popover'; //import MyCalendar from '../components/Calendar.js'\n//import MouseOverPopover from '../components/popover.js'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography'; //import { Popover } from '@material-ui/core';\n\nvar localizer = momentLocalizer(moment);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    popover: {\n      pointerEvents: 'none'\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  };\n});\n\nvar MyCalendar = function MyCalendar(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var handlePopoverOpen = function handlePopoverOpen(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handlePopoverClose = function handlePopoverClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    popup: true,\n    localizer: localizer,\n    events: props.animeArr,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    onSelectEvent: function onSelectEvent(event) {\n      return alert(event.title);\n    },\n    defaultDate: moment().toDate(),\n    style: {\n      height: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Typography, {\n    \"aria-owns\": open ? 'mouse-over-popover' : undefined,\n    \"aria-haspopup\": \"true\",\n    onMouseEnter: handlePopoverOpen,\n    onMouseLeave: handlePopoverClose,\n    comoponent: 'span',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Hover with a Popover.\"), __jsx(Popover, {\n    id: \"mouse-over-popover\",\n    className: classes.popover,\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    onClose: handlePopoverClose,\n    disableRestoreFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"I use Popover.\"))));\n};\n\nMyCalendar.getInitialProps = function _callee() {\n  var res, data, animeArr;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.jikan.moe/v3/season/'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          animeArr = data.anime.map(function (anime) {\n            return {\n              title: anime.title,\n              start: anime.airing_start,\n              end: anime.airing_start\n            };\n          });\n          console.log(\"\".concat(animeArr[0].title));\n          return _context.abrupt(\"return\", {\n            animeArr: animeArr\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","fetch","Calendar","momentLocalizer","moment","Popover","makeStyles","Typography","localizer","useStyles","theme","popover","pointerEvents","paper","padding","spacing","MyCalendar","props","classes","useState","anchorEl","setAnchorEl","handlePopoverOpen","event","currentTarget","handlePopoverClose","open","Boolean","animeArr","alert","title","toDate","height","undefined","vertical","horizontal","getInitialProps","res","json","data","anime","map","start","airing_start","end","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Layout from '../components/MyLayout.js';\r\n//import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport Popover from '@material-ui/core/Popover';\r\n//import MyCalendar from '../components/Calendar.js'\r\n//import MouseOverPopover from '../components/popover.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import { Popover } from '@material-ui/core';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst MyCalendar = props => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n      \r\n          \r\n        <Calendar\r\n\r\n          popup\r\n          localizer={localizer}\r\n          events={props.animeArr}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          onSelectEvent={event => alert(event.title)}\r\n          defaultDate={moment().toDate()}\r\n          style={{ height: 500 }}\r\n        />\r\n\r\n\r\n<Typography\r\n          aria-owns={open ? 'mouse-over-popover' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onMouseEnter={handlePopoverOpen}\r\n          onMouseLeave={handlePopoverClose}\r\n          comoponent={'span'}\r\n        >\r\n          Hover with a Popover.\r\n      </Typography>\r\n        <Popover\r\n          id=\"mouse-over-popover\"\r\n          className={classes.popover}\r\n          classes={{\r\n            paper: classes.paper,\r\n          }}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n          }}\r\n          onClose={handlePopoverClose}\r\n          disableRestoreFocus\r\n        >\r\n          <Typography>I use Popover.</Typography>\r\n        </Popover>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nMyCalendar.getInitialProps = async function () {\r\n  const res = await fetch('https://api.jikan.moe/v3/season/');\r\n  const data = await res.json();\r\n\r\n\r\n  var animeArr = data.anime.map(anime => ({\r\n    title: anime.title,\r\n    start: anime.airing_start,\r\n    end: anime.airing_start\r\n  }\r\n\r\n  ));\r\n\r\n  console.log(`${animeArr[0].title}`);\r\n  return {\r\n    animeArr\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}