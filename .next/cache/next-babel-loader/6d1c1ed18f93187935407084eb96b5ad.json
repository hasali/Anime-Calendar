{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Calendar.js\";\nvar __jsx = React.createElement;\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport event from './event';\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nvar localizer = momentLocalizer(moment);\n\nvar MyCalendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyCalendar, _Component);\n\n  function MyCalendar() {\n    _classCallCheck(this, MyCalendar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyCalendar).apply(this, arguments));\n  }\n\n  _createClass(MyCalendar, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, __jsx(Calendar, {\n        localizer: localizer,\n        events: [{\n          'title': this.state.data.anime[1].title,\n          //'allDay': true,\n          'start': new Date(),\n          'end': new Date()\n        }],\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        defaultDate: moment().toDate(),\n        style: {\n          height: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var res, data;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.jikan.moe/v3/season/2020/winter\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              // await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\n              // .then(data => data.json())\n              console.log(data.anime.length); //return { animeTitle: data.anime.title };\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyCalendar;\n}(Component);\n\nexport { MyCalendar as default };","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Calendar.js"],"names":["Calendar","momentLocalizer","moment","event","fetch","React","Component","localizer","MyCalendar","state","data","anime","title","Date","toDate","height","res","json","console","log","length"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,IAAMC,SAAS,GAAGN,eAAe,CAACC,MAAD,CAAjC;;IAEqBM,U;;;;;;;;;;;;;6BACV;AAEP,aACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AACE,QAAA,SAAS,EAAED,SADb;AAEE,QAAA,MAAM,EAAE,CAAC;AAEP,mBAAS,KAAKE,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBC,KAF3B;AAGP;AACA,mBAAS,IAAIC,IAAJ,EAJF;AAKP,iBAAO,IAAIA,IAAJ;AALA,SAAD,CAFV;AAUE,QAAA,aAAa,EAAC,OAVhB;AAWE,QAAA,WAAW,EAAC,KAXd;AAYE,QAAA,WAAW,EAAEX,MAAM,GAAGY,MAAT,EAZf;AAaE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAsBD;;;;;;;;;;+CAGmBX,KAAK,+C;;;AAAjBY,cAAAA,G;;+CACaA,GAAG,CAACC,IAAJ,E;;;AAAbP,cAAAA,I;AAEN;AACA;AAGAQ,cAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,KAAL,CAAWS,MAAvB,E,CACA;;;;;;;;;;;;EApCoCd,S;;SAAnBE,U","sourcesContent":["import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport event from './event'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react';\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default class MyCalendar extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <Calendar\r\n            localizer={localizer}\r\n            events={[{\r\n\r\n              'title': this.state.data.anime[1].title,\r\n              //'allDay': true,\r\n              'start': new Date(),\r\n              'end': new Date()\r\n\r\n            }]}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            defaultDate={moment().toDate()}\r\n            style={{ height: 500 }}\r\n\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  async componentDidMount() {\r\n\r\n    const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n    const data = await res.json();\r\n\r\n    // await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\r\n    // .then(data => data.json())\r\n\r\n\r\n    console.log(data.anime.length);\r\n    //return { animeTitle: data.anime.title };\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}