{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Dailies.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nvar Dailies = function Dailies(props) {\n  console.log(\"\".concat(props.dailyArr[1].title));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.dailyArr[0].title));\n};\n\nDailies.getStaticProps = function _callee() {\n  var res, data, today, dailyArr;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.jikan.moe/v3/season/2020/spring'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          today = new Date();\n          dailyArr = data.anime.map(function (anime) {\n            return {\n              title: anime.title,\n              date: anime.airing_start,\n              image: anime.image_url\n            };\n          }); // for (var i = 0; i < data.length; i++) {\n          //     if (data.anime[i].airing_start == today) {\n          //          dailyArr = data.anime.map(anime => ({\n          //             title: anime.title,\n          //             date: anime.airing_start,\n          //             image: anime.image_url\n          //         }));\n          //     }\n          // }\n\n          console.log(dailyArr);\n          console.log(data.anime[0].title);\n          return _context.abrupt(\"return\", {\n            dailyArr: dailyArr\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Dailies;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Dailies.js"],"names":["fetch","Dailies","props","console","log","dailyArr","title","getStaticProps","res","json","data","today","Date","anime","map","date","airing_start","image","image_url"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrBC,EAAAA,OAAO,CAACC,GAAR,WAAeF,KAAK,CAACG,QAAN,CAAe,CAAf,EAAkBC,KAAjC;AACA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACG,QAAN,CAAe,CAAf,EAAkBC,KAAvB,CADJ,CAFA;AAOH,CATD;;AAWAL,OAAO,CAACM,cAAR,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEHP,KAAK,CAAC,6CAAD,CAFF;;AAAA;AAEfQ,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfC,UAAAA,IAHe;AAIjBC,UAAAA,KAJiB,GAIT,IAAIC,IAAJ,EAJS;AAKjBP,UAAAA,QALiB,GAKNK,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAD,KAAK;AAAA,mBAAK;AAGpCP,cAAAA,KAAK,EAAEO,KAAK,CAACP,KAHuB;AAIpCS,cAAAA,IAAI,EAAEF,KAAK,CAACG,YAJwB;AAKpCC,cAAAA,KAAK,EAAEJ,KAAK,CAACK;AALuB,aAAL;AAAA,WAApB,CALM,EAYrB;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEAf,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEAF,UAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcP,KAA1B;AA1BqB,2CA2Bd;AAAED,YAAAA,QAAQ,EAARA;AAAF,WA3Bc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AA6BA,eAAeJ,OAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\n\r\nconst Dailies = props => {\r\n    console.log(`${props.dailyArr[1].title}`)\r\n    return(\r\n        \r\n    <div>\r\n        <h3>{props.dailyArr[0].title}</h3>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nDailies.getStaticProps = async function () {\r\n\r\n    const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\r\n    const data = await res.json();\r\n    var today = new Date();\r\n    var dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n        title: anime.title,\r\n        date: anime.airing_start,\r\n        image: anime.image_url\r\n    }));\r\n    // for (var i = 0; i < data.length; i++) {\r\n    //     if (data.anime[i].airing_start == today) {\r\n    //          dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n    //             title: anime.title,\r\n    //             date: anime.airing_start,\r\n    //             image: anime.image_url\r\n    //         }));\r\n    //     }\r\n    // }\r\n\r\n    console.log(dailyArr);\r\n\r\n    console.log(data.anime[0].title);\r\n    return { dailyArr }\r\n}\r\nexport default Dailies;"]},"metadata":{},"sourceType":"module"}