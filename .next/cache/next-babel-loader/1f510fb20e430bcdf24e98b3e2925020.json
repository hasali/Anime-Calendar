{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Calendar.js\";\nvar __jsx = React.createElement;\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport event from './event';\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nconst localizer = momentLocalizer(moment);\nexport default class MyCalendar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seasonValue: 'winter',\n      yearValue: new Date().getFullYear()\n    };\n  }\n\n  async componentDidMount() {\n    // const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\n    // const data = await res.json();\n    await fetch(`https://api.jikan.moe/v3/season/2020/spring`).then(data => data.json()).then(data => this.setState({\n      data\n    })).catch(error => console.log(error));\n    JSON.stringify(console.log(this.state.data.anime[0].title)); //return { animeTitle: data.anime.title };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    let title = this.state.data.season_name;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Calendar, {\n      localizer: localizer,\n      events: [{\n        title: title,\n        //'allDay': true,\n        'start': new Date(),\n        'end': new Date()\n      }],\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      defaultDate: moment().toDate(),\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Calendar.js"],"names":["Calendar","momentLocalizer","moment","event","fetch","React","Component","localizer","MyCalendar","constructor","state","seasonValue","yearValue","Date","getFullYear","componentDidMount","then","data","json","setState","catch","error","console","log","JSON","stringify","anime","title","render","season_name","toDate","height"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,SAAS,GAAGN,eAAe,CAACC,MAAD,CAAjC;AAEA,eAAe,MAAMM,UAAN,SAAyBF,SAAzB,CAAmC;AAChDG,EAAAA,WAAW,GAAE;AACX;AACF,SAAKC,KAAL,GACE;AACEC,MAAAA,WAAW,EAAE,QADf;AAEEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAFb,KADF;AAQC;;AACD,QAAMC,iBAAN,GAA0B;AAExB;AACA;AAEA,UAAMX,KAAK,CAAE,6CAAF,CAAL,CACLY,IADK,CACAC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADR,EAELF,IAFK,CAEAC,IAAI,IAAI,KAAKE,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd,CAFR,EAGLG,KAHK,CAGCC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHV,CAAN;AAKAG,IAAAA,IAAI,CAACC,SAAL,CAAeH,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWO,IAAX,CAAgBS,KAAhB,CAAsB,CAAtB,EAAyBC,KAArC,CAAf,EAVwB,CAWxB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACX,MAAAA;AAAD,QAAS,KAAKP,KAApB;AACA,QAAIiB,KAAK,GAAG,KAAKjB,KAAL,CAAWO,IAAX,CAAgBY,WAA5B;AACA,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,QAAD;AACE,MAAA,SAAS,EAAEtB,SADb;AAGE,MAAA,MAAM,EAAE,CAAC;AAEPoB,QAAAA,KAAK,EAAEA,KAFA;AAIP;AACA,iBAAS,IAAId,IAAJ,EALF;AAMP,eAAO,IAAIA,IAAJ;AANA,OAAD,CAHV;AAYE,MAAA,aAAa,EAAC,OAZhB;AAaE,MAAA,WAAW,EAAC,KAbd;AAcE,MAAA,WAAW,EAAEX,MAAM,GAAG4B,MAAT,EAdf;AAeE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAyBD;;AArD+C","sourcesContent":["import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport event from './event'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react';\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default class MyCalendar extends Component {\r\n  constructor(){\r\n    super();\r\n  this.state =\r\n    {\r\n      seasonValue: 'winter',\r\n      yearValue: new Date().getFullYear(),\r\n\r\n      \r\n    };\r\n    \r\n  }\r\n  async componentDidMount() {\r\n\r\n    // const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n    // const data = await res.json();\r\n\r\n    await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\r\n    .then(data => data.json())\r\n    .then(data => this.setState({data}))\r\n    .catch(error => console.log(error));\r\n\r\n    JSON.stringify(console.log(this.state.data.anime[0].title));\r\n    //return { animeTitle: data.anime.title };\r\n  }\r\n  render() {\r\n    const {data} = this.state;\r\n    let title = this.state.data.season_name;\r\n    return (\r\n      <>\r\n        <div>\r\n          \r\n          <Calendar\r\n            localizer={localizer}\r\n            \r\n            events={[{\r\n\r\n              title: title,\r\n              \r\n              //'allDay': true,\r\n              'start': new Date(),\r\n              'end': new Date()\r\n\r\n            }]}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            defaultDate={moment().toDate()}\r\n            style={{ height: 500 }}\r\n\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}