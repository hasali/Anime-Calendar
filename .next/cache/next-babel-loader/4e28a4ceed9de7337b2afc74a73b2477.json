{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport Popover from '@material-ui/core/Popover';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactSVG } from 'react-svg';\nimport { useState } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //My Components\n\nimport events from '../assets/events.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Dailies from '../components/Dailies.js';\nimport IconSvg from '../assets/img/score_icon.svg';\nimport { purple } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport eventStyles from '../assets/css/custEvents.module.css'; //My Styles\n\nimport styles from '../assets/css/main.module.css';\nimport { Hidden } from '@material-ui/core';\nimport calStyles from '../assets/css/rbc.module.css';\nvar localizer = momentLocalizer(moment);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    popover: {\n      pointerEvents: 'none'\n    },\n    paper: {\n      width: '235px',\n      //Width of MAL images\n      height: '430px',\n      position: \"absolute\",\n      overflow: \"hidden\",\n      padding: theme.spacing(0.6),\n      pointerEvents: 'auto'\n    }\n  };\n});\n\nvar MyCalendar = function MyCalendar(props) {\n  var _useState = useState({\n    isDark: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleChange = function handleChange(event) {\n    setState(_objectSpread({}, state, _defineProperty({}, event.target.name, event.target.checked)));\n  };\n\n  function getCustomToolbar(toolbar) {\n    var goToBack = function goToBack() {\n      var mDate = toolbar.date;\n      var newDate = new Date(mDate.getFullYear(), mDate.getMonth() - 1, 1);\n      toolbar.onNavigate('prev', newDate);\n    };\n\n    var goToNext = function goToNext() {\n      var mDate = toolbar.date;\n      var newDate = new Date(mDate.getFullYear(), mDate.getMonth() + 1, 1);\n      toolbar.onNavigate('next', newDate);\n    };\n\n    var goToCurrent = function goToCurrent() {\n      var now = new Date();\n      toolbar.date.setMonth(now.getMonth());\n      toolbar.date.setYear(now.getFullYear());\n      toolbar.onNavigate('current');\n    };\n\n    var label = function label() {\n      var date = moment(toolbar.date);\n      return __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, date.format('MMMM')), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \", date.format('YYYY')));\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"text-center align-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"rbc-toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"rbc-btn-group\",\n      style: \"\".concat(state.isDark ? {\n        backgroundColor: black\n      } : {\n        backgroundColor: white\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"prev-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"\\u2039\")), __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToCurrent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"next-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Today\")), __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"next-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\u203A\")))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, label())), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  }\n\n  ; //Move this into 'components'?\n\n  function EventPop(event) {\n    var classes = useStyles();\n\n    var _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1];\n\n    var handlePopoverOpen = function handlePopoverOpen(event) {\n      setAnchorEl(event.currentTarget);\n    };\n\n    var handlePopoverClose = function handlePopoverClose() {\n      setAnchorEl(null);\n    };\n\n    var open = Boolean(anchorEl);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      onMouseEnter: handlePopoverOpen,\n      onMouseLeave: handlePopoverClose,\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, event.title), __jsx(Popover, {\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      disableRestoreFocus: true // onClick={handlePopoverClose}\n      // onMouseLeave={handlePopoverClose}\n      ,\n      PaperProps: {\n        onMouseEnter: handlePopoverOpen,\n        onMouseLeave: handlePopoverClose\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: event.event.url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, event.title)), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, __jsx(IconSvg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), event.event.score), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles.bind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: event.event.image,\n      alt: event.title,\n      className: styles.blur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: styles.screen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: styles.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, event.event.desc)))))));\n  }\n\n  ;\n\n  function EventAgenda(_ref) {\n    var event = _ref.event;\n    return __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, __jsx(\"em\", {\n      style: {\n        color: 'magenta'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, event.title));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"\".concat(styles.bgc, \" \").concat(state.isDark ? styles.light : null),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, __jsx(Header, {\n    isDark: state.isDark,\n    className: \"top-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"grid-x text-center align-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    style: {\n      fontFamily: 'Dosis'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Released Today\"))), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    style: {\n      height: 650\n    },\n    tooltipAccessor: null,\n    popup: true,\n    localizer: localizer // events={props.animeArr}\n    ,\n    events: events,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    defaultDate: moment().toDate(),\n    eventPropGetter: function eventPropGetter(event, start, end, isSelected) {\n      var newStyle = {\n        backgroundColor: 'rgba(31, 125, 247, 0.7)'\n      };\n\n      if (state.isDark) {\n        newStyle.backgroundColor = 'rgba(175, 16, 43, 0.89)';\n      }\n\n      ;\n      return {\n        style: newStyle\n      };\n    },\n    components: {\n      event: EventPop,\n      //event: EventAgenda,\n      toolbar: getCustomToolbar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), __jsx(Switch, {\n    checked: state.isDark,\n    onChange: handleChange,\n    name: \"isDark\",\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  })));\n}; // MyCalendar.getInitialProps = async function () {\n//const res = await fetch('https://api.jikan.moe/v3/season');\n//const data = await res.json();\n// if (data) {\n//   var animeArr = data.anime.map(anime => ({\n//     title: anime.title,\n//     url: anime.url,\n//     desc: anime.synopsis,\n//     start: anime.airing_start,\n//     end: anime.airing_start,\n//     image: anime.image_url,\n//     score: anime.score\n//   }\n//   ));\n//   return {\n//     relData: data.anime,\n//     animeArr\n//   };\n// }\n// else{\n//   return <div>Loading</div>;\n// }\n// console.log(data.anime[0].score);\n// console.log(data.anime[0].title);\n// };\n\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","fetch","Calendar","momentLocalizer","moment","Popover","makeStyles","ReactSVG","useState","FormGroup","FormControlLabel","events","Header","Footer","Dailies","IconSvg","purple","Switch","eventStyles","styles","Hidden","calStyles","localizer","useStyles","theme","popover","pointerEvents","paper","width","height","position","overflow","padding","spacing","MyCalendar","props","isDark","state","setState","handleChange","event","target","name","checked","getCustomToolbar","toolbar","goToBack","mDate","date","newDate","Date","getFullYear","getMonth","onNavigate","goToNext","goToCurrent","now","setMonth","setYear","label","format","backgroundColor","black","white","EventPop","classes","anchorEl","setAnchorEl","handlePopoverOpen","currentTarget","handlePopoverClose","open","Boolean","title","vertical","horizontal","onMouseEnter","onMouseLeave","url","score","bind","image","blur","screen","description","desc","EventAgenda","color","bgc","light","fontFamily","toDate","start","end","isSelected","newStyle","style"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ReactSVG } from 'react-svg';\r\nimport  { useState } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n//My Components\r\nimport events from '../assets/events.js'\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Dailies from '../components/Dailies.js'\r\nimport IconSvg from '../assets/img/score_icon.svg';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport eventStyles from '../assets/css/custEvents.module.css'\r\n//My Styles\r\nimport styles from '../assets/css/main.module.css'\r\nimport { Hidden } from '@material-ui/core';\r\nimport calStyles from '../assets/css/rbc.module.css';\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    width: '235px', //Width of MAL images\r\n    height:'430px',\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0.6),\r\n    pointerEvents: 'auto'\r\n  },\r\n}))\r\n\r\nconst MyCalendar = props => {\r\n  \r\n  const [state, setState] = useState({isDark: false});\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  function getCustomToolbar(toolbar) {\r\n\r\n\r\n\r\n    const goToBack = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() - 1,\r\n        1);\r\n      toolbar.onNavigate('prev', newDate);\r\n\r\n\r\n    }\r\n    const goToNext = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() + 1,\r\n        1);\r\n      toolbar.onNavigate('next', newDate);\r\n\r\n\r\n    }\r\n    const goToCurrent = () => {\r\n      const now = new Date();\r\n      toolbar.date.setMonth(now.getMonth());\r\n      toolbar.date.setYear(now.getFullYear());\r\n      toolbar.onNavigate('current');\r\n    };\r\n\r\n    const label = () => {\r\n      const date = moment(toolbar.date);\r\n      return (\r\n        <span><b>{date.format('MMMM')}</b><span> {date.format('YYYY')}</span></span>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <>\r\n      \r\n        <div className=\"text-center align-center\">\r\n          <div className=\"rbc-toolbar\">\r\n            <div className=\"rbc-btn-group\" style={`${state.isDark ?  {backgroundColor:black} : {backgroundColor:white}}`}>\r\n              <button type=\"button\" onClick={goToBack}>\r\n                <span className=\"prev-icon\">&#8249;</span>\r\n              </button>\r\n              <button type=\"button\" onClick={goToCurrent}>\r\n                <span className=\"next-icon\">Today</span>\r\n              </button>\r\n              <button type=\"button\" onClick={goToNext}>\r\n                <span className=\"next-icon\">&#8250;</span>\r\n              </button>\r\n            </div>\r\n          </div >\r\n          <div><label>{label()}</label></div>\r\n          <br/>\r\n        </div>\r\n        \r\n      </>\r\n    )\r\n  };\r\n  //Move this into 'components'?\r\n  function EventPop(event) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handlePopoverOpen = event => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    \r\n    return (\r\n      <>\r\n        <div>\r\n          <div\r\n            onMouseEnter={handlePopoverOpen}\r\n            onMouseLeave={handlePopoverClose}\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup={true}\r\n          >\r\n            {event.title}\r\n\r\n          </div>\r\n          <Popover\r\n\r\n            className={classes.popover}\r\n            classes={{\r\n              paper: classes.paper,\r\n            }}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n\r\n            disableRestoreFocus\r\n            // onClick={handlePopoverClose}\r\n            // onMouseLeave={handlePopoverClose}\r\n            PaperProps={{ onMouseEnter: handlePopoverOpen, onMouseLeave: handlePopoverClose }}\r\n          >\r\n\r\n            <div>\r\n              <div>\r\n                <a href={event.event.url} target=\"_blank\">{event.title}</a>\r\n              </div>\r\n              <div>\r\n                <IconSvg />\r\n                {event.event.score}\r\n\r\n              </div>\r\n              <br />\r\n              <div>\r\n                \r\n                <div className={styles.bind}>\r\n                  \r\n                   <img src={event.event.image} alt={event.title} className={styles.blur}/>\r\n                   <div className={styles.screen}></div>\r\n                 \r\n                \r\n                  <div className={styles.description}>\r\n                    {event.event.desc}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            \r\n\r\n\r\n\r\n            </div>\r\n\r\n          </Popover>\r\n        </div>\r\n      </>\r\n    )\r\n\r\n\r\n  };\r\n  function EventAgenda({ event }) {\r\n    return (\r\n      <span>\r\n        <em style={{ color: 'magenta' }}>{event.title}</em>\r\n        \r\n      </span>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <>\r\n\r\n      <div className={`${styles.bgc} ${state.isDark ? styles.light : null}`}>\r\n        <Header isDark={state.isDark} className=\"top-bar\" />\r\n        <br/>    \r\n        <div className=\"grid-x text-center align-center\">\r\n          <div>\r\n            <h4 style={{fontFamily:'Dosis'}}>Released Today</h4>\r\n\r\n            {/* <Dailies /> */}\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className={\"grid-container\"}>\r\n          <Calendar\r\n            \r\n            style={{ height: 650 }}\r\n\r\n            tooltipAccessor={null}\r\n            popup\r\n            localizer={localizer}\r\n            // events={props.animeArr}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n\r\n            defaultDate={moment().toDate()}\r\n            eventPropGetter={\r\n              (event, start, end, isSelected) =>{\r\n                var newStyle= {backgroundColor: 'rgba(31, 125, 247, 0.7)'};\r\n\r\n                if(state.isDark){\r\n                  newStyle.backgroundColor = 'rgba(175, 16, 43, 0.89)'\r\n                };\r\n\r\n                return{\r\n                  \r\n                  style: newStyle\r\n                };\r\n              }\r\n            }\r\n            components={{\r\n              event: EventPop,\r\n              //event: EventAgenda,\r\n              toolbar: getCustomToolbar\r\n            }}\r\n\r\n          />\r\n          \r\n        </div>\r\n        <br />\r\n        <br />\r\n        <Switch\r\n          checked={state.isDark}\r\n          onChange={handleChange}\r\n          name=\"isDark\"\r\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n        />\r\n        <Footer />\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n// MyCalendar.getInitialProps = async function () {\r\n  //const res = await fetch('https://api.jikan.moe/v3/season');\r\n  //const data = await res.json();\r\n\r\n  // if (data) {\r\n  //   var animeArr = data.anime.map(anime => ({\r\n  //     title: anime.title,\r\n  //     url: anime.url,\r\n  //     desc: anime.synopsis,\r\n  //     start: anime.airing_start,\r\n  //     end: anime.airing_start,\r\n  //     image: anime.image_url,\r\n  //     score: anime.score\r\n  //   }\r\n\r\n  //   ));\r\n  //   return {\r\n  //     relData: data.anime,\r\n  //     animeArr\r\n  \r\n  //   };\r\n  // }\r\n  // else{\r\n  //   return <div>Loading</div>;\r\n  // }\r\n  // console.log(data.anime[0].score);\r\n  // console.log(data.anime[0].title);\r\n\r\n  \r\n// };\r\n\r\n\r\n\r\n\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}