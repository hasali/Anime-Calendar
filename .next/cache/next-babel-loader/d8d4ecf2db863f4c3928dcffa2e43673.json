{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Calendar.js\";\nvar __jsx = React.createElement;\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment'; //import event from './event'\n\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst localizer = momentLocalizer(moment);\nexport default class MyCalendar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seasonValue: 'winter',\n      yearValue: new Date().getFullYear() //data: { anime: [] },\n\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\n    const data = await res.json(); // await fetch(`https://api.jikan.moe/v3/season/2020/winter`)\n    //   .then(data => data.json())\n    //   .then(data => this.setState({ data }))\n    //   .catch(error => console.log(error));\n\n    var animeArr = data.anime; //console.log(animeArr);\n    //console.log(data.anime);\n    //console.log(this.state.data.anime[1].airing_start);\n\n    return {\n      animeArr\n    };\n  }\n\n  render() {\n    animeArr = this.props;\n    console.log(animeArr); //console.log(Array.isArray(data.anime));\n    //console.log(this.props.animeArr);\n    //let title = this.props.animeArr.title;\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(Calendar, {\n      localizer: localizer,\n      events: [{\n        'title': 'Test',\n        'start': new Date(),\n        'end': new Date()\n      }] // events={this.props.aniList.map(anime =>([{\n      //   title: anime.title,\n      //   start: anime.airing_start,\n      //   end: anime.airing_start\n      // }]))}\n      // events={data.anime.map(anime =>  {\n      //   return(\n      //   [\n      //     {\n      //       //'key': anime.mal_id,\n      //       'title': anime.title,\n      //       'start': anime.airing_start,\n      //       'end': anime.airing_start\n      //     }\n      //   ])\n      // })}\n      ,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      defaultDate: moment().toDate(),\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\nMyCalendar.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object)\n};","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Calendar.js"],"names":["Calendar","momentLocalizer","moment","fetch","React","Component","PropTypes","localizer","MyCalendar","constructor","state","seasonValue","yearValue","Date","getFullYear","componentDidMount","res","data","json","animeArr","anime","render","props","console","log","toDate","height","propTypes","arrayOf","object"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,MAAMC,SAAS,GAAGN,eAAe,CAACC,MAAD,CAAjC;AAEA,eAAe,MAAMM,UAAN,SAAyBH,SAAzB,CAAmC;AAChDI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GACA;AACEC,MAAAA,WAAW,EAAE,QADf;AAEEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFb,CAGE;;AAHF,KADA;AAQD;;AACD,QAAMC,iBAAN,GAA0B;AAExB,UAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE,6CAAF,CAAvB;AACA,UAAMc,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CAHwB,CAKxB;AACA;AACA;AACA;;AAGA,QAAIC,QAAQ,GAAGF,IAAI,CAACG,KAApB,CAXwB,CAYxB;AACA;AACA;;AACA,WAAM;AAACD,MAAAA;AAAD,KAAN;AAGD;;AACDE,EAAAA,MAAM,GAAG;AACNF,IAAAA,QAAQ,GAAI,KAAKG,KAAjB;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAFO,CAGP;AACA;AACA;;AACA,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,QAAD;AAEE,MAAA,SAAS,EAAEZ,SAFb;AAGE,MAAA,MAAM,EAAE,CAAC;AAGP,iBAAQ,MAHD;AAIP,iBAAS,IAAIM,IAAJ,EAJF;AAKP,eAAO,IAAIA,IAAJ;AALA,OAAD,CAHV,CAYE;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA7BF;AA+BE,MAAA,aAAa,EAAC,OA/BhB;AAgCE,MAAA,WAAW,EAAC,KAhCd;AAiCE,MAAA,WAAW,EAAEX,MAAM,GAAGuB,MAAT,EAjCf;AAkCE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAlCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AA6CD;;AAlF+C;AAsFlDlB,UAAU,CAACmB,SAAX,GAAuB;AAACV,EAAAA,IAAI,EAAEX,SAAS,CAACsB,OAAV,CAE5BtB,SAAS,CAACuB,MAFkB;AAAP,CAAvB","sourcesContent":["import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n//import event from './event'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport default class MyCalendar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state =\r\n    {\r\n      seasonValue: 'winter',\r\n      yearValue: new Date().getFullYear(),\r\n      //data: { anime: [] },\r\n\r\n    };\r\n\r\n  }\r\n  async componentDidMount() {\r\n\r\n    const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n    const data = await res.json();\r\n\r\n    // await fetch(`https://api.jikan.moe/v3/season/2020/winter`)\r\n    //   .then(data => data.json())\r\n    //   .then(data => this.setState({ data }))\r\n    //   .catch(error => console.log(error));\r\n\r\n\r\n    var animeArr = data.anime;\r\n    //console.log(animeArr);\r\n    //console.log(data.anime);\r\n    //console.log(this.state.data.anime[1].airing_start);\r\n    return{animeArr};\r\n\r\n\r\n  }\r\n  render() {\r\n     animeArr  = this.props;\r\n    console.log(animeArr);\r\n    //console.log(Array.isArray(data.anime));\r\n    //console.log(this.props.animeArr);\r\n    //let title = this.props.animeArr.title;\r\n    return (\r\n      <>\r\n        <div>\r\n\r\n          <Calendar\r\n\r\n            localizer={localizer}\r\n            events={[{\r\n\r\n\r\n              'title':'Test',\r\n              'start': new Date(),\r\n              'end': new Date()\r\n\r\n            }]}\r\n\r\n            // events={this.props.aniList.map(anime =>([{\r\n            //   title: anime.title,\r\n            //   start: anime.airing_start,\r\n            //   end: anime.airing_start\r\n\r\n            // }]))}\r\n            // events={data.anime.map(anime =>  {\r\n            //   return(\r\n            //   [\r\n            //     {\r\n            //       //'key': anime.mal_id,\r\n            //       'title': anime.title,\r\n            //       'start': anime.airing_start,\r\n            //       'end': anime.airing_start\r\n            //     }\r\n            //   ])\r\n\r\n            // })}\r\n\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            defaultDate={moment().toDate()}\r\n            style={{ height: 500 }}\r\n\r\n          />\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nMyCalendar.propTypes = {data: PropTypes.arrayOf(\r\n  \r\n  PropTypes.object\r\n )};"]},"metadata":{},"sourceType":"module"}