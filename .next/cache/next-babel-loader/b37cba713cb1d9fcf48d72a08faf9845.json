{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Dailies.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from 'isomorphic-unfetch';\n\nconst Dailies = () => {\n  const {\n    0: hasError,\n    1: setErrors\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    anime: []\n  });\n\n  async function fetchData() {\n    const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\n    res.json().then(res => setData(res)).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const dataArr = data.anime.map(anime => ({\n    title: anime.title\n  }));\n  console.log(data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n}; // const Dailies = props => {\n//     console.log(`${props.dailyArr[1].title}`)\n//     return(\n//     <div>\n//         <h3>{props.dailyArr[0].title}</h3>\n//     </div>\n//     )\n// }\n// Dailies.getStaticProps = async function () {\n//     const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\n//     const data = await res.json();\n//     var today = new Date();\n//     var dailyArr = data.anime.map(anime => ({\n//         title: anime.title,\n//         date: anime.airing_start,\n//         image: anime.image_url\n//     }));\n//     // for (var i = 0; i < data.length; i++) {\n//     //     if (data.anime[i].airing_start == today) {\n//     //          dailyArr = data.anime.map(anime => ({\n//     //             title: anime.title,\n//     //             date: anime.airing_start,\n//     //             image: anime.image_url\n//     //         }));\n//     //     }\n//     // }\n//     console.log(dailyArr);\n//     console.log(data.anime[0].title);\n//     return { dailyArr }\n//}\n\n\nexport default Dailies;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Dailies.js"],"names":["React","useState","useEffect","fetch","Dailies","hasError","setErrors","data","setData","anime","fetchData","res","json","then","catch","err","dataArr","map","title","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC;AAACQ,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAhC;;AAEA,iBAAeC,SAAf,GAA2B;AACvB,UAAMC,GAAG,GAAG,MAAMR,KAAK,CAAC,6CAAD,CAAvB;AACAQ,IAAAA,GAAG,CACEC,IADL,GAEKC,IAFL,CAEUF,GAAG,IAAIH,OAAO,CAACG,GAAD,CAFxB,EAGKG,KAHL,CAGWC,GAAG,IAAIT,SAAS,CAACS,GAAD,CAH3B;AAMH;;AACDb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS;AAEZ,GAHQ,EAGP,EAHO,CAAT;AAIA,QAAMM,OAAO,GAAGT,IAAI,CAACE,KAAL,CAAWQ,GAAX,CAAeR,KAAK,KAAK;AACrCS,IAAAA,KAAK,EAAET,KAAK,CAACS;AADwB,GAAL,CAApB,CAAhB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAaH,CAlCD,C,CAmCA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AACA,eAAeH,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport fetch from 'isomorphic-unfetch';\r\nconst Dailies = () => {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [data, setData] = useState({anime: []});\r\n\r\n    async function fetchData() {\r\n        const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\r\n        res\r\n            .json()\r\n            .then(res => setData(res))\r\n            .catch(err => setErrors(err));\r\n\r\n        \r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n        \r\n    },[]);\r\n    const dataArr = data.anime.map(anime => ({\r\n        title: anime.title\r\n    }));\r\n    console.log(data);\r\n    return (\r\n        \r\n        <div>\r\n            {/* <p>{dataArr[0].title}</p> */}\r\n            {/* <ul>\r\n                {data.anime.map(anime => (\r\n                    <li key={anime.mal_id}>\r\n                        <a href={anime.url}>{anime.title}</a>\r\n                    </li>\r\n                ))}\r\n            </ul> */}\r\n        </div>\r\n    );\r\n}\r\n// const Dailies = props => {\r\n//     console.log(`${props.dailyArr[1].title}`)\r\n//     return(\r\n        \r\n//     <div>\r\n//         <h3>{props.dailyArr[0].title}</h3>\r\n//     </div>\r\n//     )\r\n\r\n// }\r\n\r\n// Dailies.getStaticProps = async function () {\r\n\r\n//     const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\r\n//     const data = await res.json();\r\n//     var today = new Date();\r\n//     var dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n//         title: anime.title,\r\n//         date: anime.airing_start,\r\n//         image: anime.image_url\r\n//     }));\r\n//     // for (var i = 0; i < data.length; i++) {\r\n//     //     if (data.anime[i].airing_start == today) {\r\n//     //          dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n//     //             title: anime.title,\r\n//     //             date: anime.airing_start,\r\n//     //             image: anime.image_url\r\n//     //         }));\r\n//     //     }\r\n//     // }\r\n\r\n//     console.log(dailyArr);\r\n\r\n//     console.log(data.anime[0].title);\r\n//     return { dailyArr }\r\n//}\r\nexport default Dailies;"]},"metadata":{},"sourceType":"module"}