{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { component } from 'react';\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      selectValue: 'winter',\n      data: {\n        anime: []\n      }\n    };\n  }\n\n  handleChange(e) {\n    // var season2 = selectValue;\n    this.setState({\n      selectValue: e.target.value\n    }); //   if(this.state !== ''){\n    //   const res = await fetch(`https://api.jikan.moe/v3/season/2020/${this.state.selectValue}`);\n    //   const data = await res.json();\n    //   console.log(this.state);\n    //   console.log(data.anime);\n    //   return {\n    //     anilist: data.anime,\n    //     seasonName: data.season_name,\n    //     seasonYear: data.season_year\n    //   }\n    // }\n  }\n\n  async componentDidUpdate() {\n    if (this.state.selectValue !== '') {\n      await fetch(`https://api.jikan.moe/v3/season/2019/${this.state.selectValue}`).then(data => data.json()).then(data => this.setState({\n        data\n      })); // return {\n      //   anilist: data.anime,\n      //   seasonName: data.season_name,\n      //   seasonYear: data.season_year\n      // }\n    }\n  } // static async componentDidMount() {\n  //   if (this.state == null) {\n  //     await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\n  //     .then(data => data.json())\n  //     .then(data => this.setState({data}));\n  //     console.log(`Show data fetched. Count: ${data.anime.length}`);\n  //     console.log(`Season: ${data.season_name}`);\n  //     // return {\n  //     //   anilist: data.anime,\n  //     //   seasonName: data.season_name,\n  //     //   seasonYear: data.season_year\n  //     // };\n  //   }\n  // }\n\n\n  render() {\n    //console.log(this.state)\n    const {\n      data\n    } = this.state;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"select\", {\n      value: this.state.selectValue,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"winter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Winter\"), __jsx(\"option\", {\n      value: \"spring\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Spring\"), __jsx(\"option\", {\n      value: \"summer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Summer\"), __jsx(\"option\", {\n      value: \"fall\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Fall\")), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, data.anime.season_name, \" \", data.anime.season_year), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, console.log(data.anime), data.anime.map(anime => {\n      return __jsx(\"li\", {\n        key: anime.mal_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/p/[id]\",\n        as: `/p/${anime.mal_id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, anime.title)));\n    })));\n  }\n\n} // const Index = props => (\n//   //Something isn't right about the logic here. Maybe dropdown shouldn't be here.\n//   <Layout>\n//     {/* <select value={props.value} onChange={props.handleChange}>\n//       <option value = \"winter\">Winter</option>\n//       <option value = \"spring\">Spring</option>\n//       <option value = \"summer\">Summer</option>\n//       <option value = \"fall\">Fall</option>\n//     </select> */}\n//     <h1>{props.seasonName} {props.seasonYear}</h1>\n//     <ul>\n//       {props.anilist.map(anime => (\n//           <li key = {anime.mal_id}>\n//             <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\n//               <a>{anime.title}</a>\n//             </Link>\n//           </li>\n//         ))}\n//     </ul>\n//   </Layout>\n// );\n// // Index.getInitialState = function(){\n// //   return {selectValue: 'winter'};\n// // };\n// // Index.handleChange = function(e){\n// //    this.setState({selectValue:e.target.value});\n// // }\n// Index.getInitialProps = async function() {\n//   const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.anime.length}`);\n//   console.log(`Season: ${data.season_name}`);\n//   return {\n//     anilist: data.anime,\n//     seasonName: data.season_name,\n//     seasonYear: data.season_year\n//   };\n// };\n// // Index.componentDidUpdate = function(){\n// // }\n// export default Index;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","component","Layout","Link","fetch","Index","Component","constructor","props","handleChange","bind","state","selectValue","data","anime","e","setState","target","value","componentDidUpdate","then","json","render","season_name","season_year","console","log","map","mal_id","title"],"mappings":"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","sourcesContent":["import React, { component } from 'react';\r\nimport Layout from '../components/MyLayout.js';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport default class Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = \r\n    { selectValue: 'winter',\r\n      data: {anime:[]}               \r\n    };\r\n  }\r\n\r\n  handleChange(e) {\r\n    // var season2 = selectValue;\r\n    this.setState({ selectValue: e.target.value });\r\n\r\n    //   if(this.state !== ''){\r\n\r\n\r\n    //   const res = await fetch(`https://api.jikan.moe/v3/season/2020/${this.state.selectValue}`);\r\n    //   const data = await res.json();\r\n\r\n    //   console.log(this.state);\r\n    //   console.log(data.anime);\r\n\r\n    //   return {\r\n    //     anilist: data.anime,\r\n    //     seasonName: data.season_name,\r\n    //     seasonYear: data.season_year\r\n    //   }\r\n    // }\r\n\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    if (this.state.selectValue !== '') {\r\n\r\n\r\n      await fetch(`https://api.jikan.moe/v3/season/2019/${this.state.selectValue}`)\r\n      .then(data => data.json())\r\n      .then(data => this.setState({data}));\r\n\r\n    \r\n\r\n      // return {\r\n      //   anilist: data.anime,\r\n      //   seasonName: data.season_name,\r\n      //   seasonYear: data.season_year\r\n      // }\r\n    }\r\n  }\r\n  // static async componentDidMount() {\r\n\r\n  //   if (this.state == null) {\r\n\r\n  //     await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\r\n  //     .then(data => data.json())\r\n  //     .then(data => this.setState({data}));\r\n      \r\n      \r\n  //     console.log(`Show data fetched. Count: ${data.anime.length}`);\r\n  //     console.log(`Season: ${data.season_name}`);\r\n\r\n\r\n  //     // return {\r\n  //     //   anilist: data.anime,\r\n  //     //   seasonName: data.season_name,\r\n  //     //   seasonYear: data.season_year\r\n  //     // };\r\n  //   }\r\n  // }\r\n  render() {\r\n    //console.log(this.state)\r\n    const {data} = this.state\r\n    return (\r\n      \r\n      <React.Fragment>\r\n        <select value={this.state.selectValue} onChange={this.handleChange}>\r\n          <option value=\"winter\">Winter</option>\r\n          <option value=\"spring\">Spring</option>\r\n          <option value=\"summer\">Summer</option>\r\n          <option value=\"fall\">Fall</option>\r\n        </select>\r\n        <h1>{data.anime.season_name} {data.anime.season_year}</h1>\r\n        \r\n        <ul>\r\n          {console.log(data.anime)}\r\n          {data.anime.map(anime => {\r\n            return (\r\n          <li key={anime.mal_id}>\r\n            <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\r\n              <a>{anime.title}</a>\r\n            </Link>\r\n          </li>\r\n            )\r\n            })}\r\n        </ul>\r\n        </React.Fragment>\r\n          \r\n        \r\n      \r\n    )\r\n  }\r\n}\r\n// const Index = props => (\r\n//   //Something isn't right about the logic here. Maybe dropdown shouldn't be here.\r\n//   <Layout>\r\n\r\n//     {/* <select value={props.value} onChange={props.handleChange}>\r\n//       <option value = \"winter\">Winter</option>\r\n//       <option value = \"spring\">Spring</option>\r\n//       <option value = \"summer\">Summer</option>\r\n//       <option value = \"fall\">Fall</option>\r\n//     </select> */}\r\n//     <h1>{props.seasonName} {props.seasonYear}</h1>\r\n//     <ul>\r\n//       {props.anilist.map(anime => (\r\n//           <li key = {anime.mal_id}>\r\n//             <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\r\n//               <a>{anime.title}</a>\r\n//             </Link>\r\n//           </li>\r\n//         ))}\r\n//     </ul>\r\n//   </Layout>\r\n\r\n// );\r\n// // Index.getInitialState = function(){\r\n// //   return {selectValue: 'winter'};\r\n\r\n// // };\r\n// // Index.handleChange = function(e){\r\n\r\n// //    this.setState({selectValue:e.target.value});\r\n\r\n\r\n\r\n// // }\r\n\r\n// Index.getInitialProps = async function() {\r\n\r\n\r\n\r\n//   const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n//   const data = await res.json();\r\n\r\n//   console.log(`Show data fetched. Count: ${data.anime.length}`);\r\n//   console.log(`Season: ${data.season_name}`);\r\n\r\n\r\n//   return {\r\n//     anilist: data.anime,\r\n//     seasonName: data.season_name,\r\n//     seasonYear: data.season_year\r\n//   };\r\n\r\n// };\r\n// // Index.componentDidUpdate = function(){\r\n\r\n// // }\r\n\r\n// export default Index;\r\n"]},"metadata":{},"sourceType":"module"}