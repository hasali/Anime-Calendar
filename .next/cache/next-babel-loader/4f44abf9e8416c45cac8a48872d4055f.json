{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Dailies.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from 'isomorphic-unfetch';\n\nconst Dailies = () => {\n  const {\n    0: hasError,\n    1: setErrors\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    anime: []\n  });\n  const today = new Date();\n  var dailyArr;\n\n  async function fetchData() {\n    const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\n    res.json().then(res => setData(res)).catch(err => setErrors(err));\n    dailyArr = data.anime.filter(anime => {\n      if (anime.airing_start.pop() !== today) {\n        return false;\n      }\n\n      return true;\n    }).map(anime => {\n      return anime;\n    });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log(dailyArr.anime);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, data.anime.map(anime => __jsx(\"li\", {\n    key: anime.mal_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: anime.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, anime.title)))));\n}; // const Dailies = props => {\n//     console.log(`${props.dailyArr[1].title}`)\n//     return(\n//     <div>\n//         <h3>{props.dailyArr[0].title}</h3>\n//     </div>\n//     )\n// }\n// Dailies.getStaticProps = async function () {\n//     const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\n//     const data = await res.json();\n//     var today = new Date();\n//     var dailyArr = data.anime.map(anime => ({\n//         title: anime.title,\n//         date: anime.airing_start,\n//         image: anime.image_url\n//     }));\n//     // for (var i = 0; i < data.length; i++) {\n//     //     if (data.anime[i].airing_start == today) {\n//     //          dailyArr = data.anime.map(anime => ({\n//     //             title: anime.title,\n//     //             date: anime.airing_start,\n//     //             image: anime.image_url\n//     //         }));\n//     //     }\n//     // }\n//     console.log(dailyArr);\n//     console.log(data.anime[0].title);\n//     return { dailyArr }\n//}\n\n\nexport default Dailies;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Dailies.js"],"names":["React","useState","useEffect","fetch","Dailies","hasError","setErrors","data","setData","anime","today","Date","dailyArr","fetchData","res","json","then","catch","err","filter","airing_start","pop","map","console","log","mal_id","url","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACM,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC;AAACQ,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAhC;AACA,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,QAAJ;;AACA,iBAAeC,SAAf,GAA2B;AACvB,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,6CAAD,CAAvB;AACAW,IAAAA,GAAG,CACEC,IADL,GAEKC,IAFL,CAEUF,GAAG,IAAIN,OAAO,CAACM,GAAD,CAFxB,EAGKG,KAHL,CAGWC,GAAG,IAAIZ,SAAS,CAACY,GAAD,CAH3B;AAKAN,IAAAA,QAAQ,GAAGL,IAAI,CAACE,KAAL,CAAWU,MAAX,CAAkBV,KAAK,IAAG;AACjC,UAAGA,KAAK,CAACW,YAAN,CAAmBC,GAAnB,OAA6BX,KAAhC,EAAsC;AAClC,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KALU,EAKRY,GALQ,CAKJb,KAAK,IAAE;AAAC,aAAOA,KAAP;AAAa,KALjB,CAAX;AAMH;;AACDP,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,SAAS;AAEZ,GAHQ,EAGP,EAHO,CAAT;AAKAU,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACH,KAArB;AAGQ,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACE,KAAL,CAAWa,GAAX,CAAeb,KAAK,IAEjB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACgB,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAEhB,KAAK,CAACiB,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBjB,KAAK,CAACkB,KAA3B,CADJ,CAFH,CADL,CAFJ,CAFJ;AAiBX,CA5CD,C,CA6CA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AACA,eAAevB,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Dailies = () => {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [data, setData] = useState({anime: []});\r\n    const today = new Date();\r\n    var dailyArr;\r\n    async function fetchData() {\r\n        const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\r\n        res\r\n            .json()\r\n            .then(res => setData(res))\r\n            .catch(err => setErrors(err));\r\n\r\n        dailyArr = data.anime.filter(anime =>{\r\n            if(anime.airing_start.pop() !== today){\r\n                return false;\r\n            }\r\n            return true;\r\n        }).map(anime=>{return anime});\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n        \r\n    },[]);\r\n    \r\n    console.log(dailyArr.anime);\r\n    \r\n   \r\n            return (\r\n\r\n                <div>\r\n                    {/* <p>{dataArr[0].title}</ p> */}\r\n                    <ul>\r\n                        {data.anime.map(anime => (\r\n\r\n                            <li key={anime.mal_id}>\r\n                                <a href={anime.url}>{anime.title}</a>\r\n                            </li>\r\n\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            );\r\n    \r\n    \r\n}\r\n// const Dailies = props => {\r\n//     console.log(`${props.dailyArr[1].title}`)\r\n//     return(\r\n        \r\n//     <div>\r\n//         <h3>{props.dailyArr[0].title}</h3>\r\n//     </div>\r\n//     )\r\n\r\n// }\r\n\r\n// Dailies.getStaticProps = async function () {\r\n\r\n//     const res = await fetch('https://api.jikan.moe/v3/season/2020/spring');\r\n//     const data = await res.json();\r\n//     var today = new Date();\r\n//     var dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n//         title: anime.title,\r\n//         date: anime.airing_start,\r\n//         image: anime.image_url\r\n//     }));\r\n//     // for (var i = 0; i < data.length; i++) {\r\n//     //     if (data.anime[i].airing_start == today) {\r\n//     //          dailyArr = data.anime.map(anime => ({\r\n\r\n\r\n//     //             title: anime.title,\r\n//     //             date: anime.airing_start,\r\n//     //             image: anime.image_url\r\n//     //         }));\r\n//     //     }\r\n//     // }\r\n\r\n//     console.log(dailyArr);\r\n\r\n//     console.log(data.anime[0].title);\r\n//     return { dailyArr }\r\n//}\r\nexport default Dailies;"]},"metadata":{},"sourceType":"module"}