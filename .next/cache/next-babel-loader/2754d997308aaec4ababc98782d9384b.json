{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nvar localizer = momentLocalizer(moment); //import MyCalendar from '../components/CalendarV2.js'\n// export default class Index extends Component {\n//   constructor() {\n//     super();\n//     //this.handleChange = this.handleChange.bind(this);\n//     // this.state =\n//     // {\n//     //   seasonValue: 'winter',\n//     //   yearValue: new Date().getFullYear(),\n//     //   data: { anime: [] }\n//     // };\n//   }\n//   // handleChange(e) {\n//   //   // var season2 = seasonValue;\n//   //   this.setState({ seasonValue: e.target.value});\n//     //   if(this.state !== ''){\n//     //   const res = await fetch(`https://api.jikan.moe/v3/season/2020/${this.state.seasonValue}`);\n//     //   const data = await res.json();\n//     //   console.log(this.state);\n//     //   console.log(data.anime);\n//     //   return {\n//     //     anilist: data.anime,\n//     //     seasonName: data.season_name,\n//     //     seasonYear: data.season_year\n//     //   }\n//     // }\n// //}\n//   // async componentDidUpdate() {\n//   //   //Is this check  necessary??\n//   //   if (this.state.seasonValue !== '') {\n//   //     await fetch(`https://api.jikan.moe/v3/season/${this.state.yearValue}/${this.state.seasonValue}`)\n//   //       .then(data => data.json())\n//   //       .then(data => this.setState({ data }));\n//   //    // console.log(`Fetch Count: ${data.anime.length}`);\n//   //     // return {\n//   //     //   anilist: data.anime,\n//   //     //   seasonName: data.season_name,\n//   //     //   seasonYear: data.season_year\n//   //     // }\n//   //   }\n//   // }\n//   async componentDidMount() {\n//       // await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\n//       // .then(data => data.json())\n//       // .then(data => this.setState({data}));\n//       //console.log(this.state.data.anime.length);\n//     //   console.log(`Show data fetched. Count: ${data.anime.length}`);\n//     //   console.log(`Season: ${data.season_name}`);\n//   }\n//   render() {\n//     //console.log(this.state)\n//     //const { data } = this.state;\n//     return (\n//       <>\n//        <MyCalendar />\n//         {/* <select value={this.state.seasonValue} onChange={this.handleChange}>\n//           <option value=\"winter\">Winter</option>\n//           <option value=\"spring\">Spring</option>\n//           <option value=\"summer\">Summer</option>\n//           <option value=\"fall\">Fall</option>\n//         </select>\n//         <h1>{data.season_name} {data. season_year}</h1>\n//         {/* {console.log('hello')} */}\n//         {/* <ul>\n//           {data.anime.map(anime => {\n//             return (\n//               <li key={anime.mal_id}>\n//                 <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\n//                   <a>{anime.title}</a>\n//                 </Link>\n//               </li>\n//             )\n//           })}\n//         </ul> */} \n//       </>\n//     )\n//   }\n// }\n// const Index = props => (\n//   //Something isn't right about the logic here. Maybe dropdown shouldn't be here.\n//   <Layout>\n//     {/* <select value={props.value} onChange={props.handleChange}>\n//       <option value = \"winter\">Winter</option>\n//       <option value = \"spring\">Spring</option>\n//       <option value = \"summer\">Summer</option>\n//       <option value = \"fall\">Fall</option>\n//     </select> */}\n//     <h1>{props.seasonName} {props.seasonYear}</h1>\n//     <ul>\n//       {props.anilist.map(anime => (\n//           <li key = {anime.mal_id}>\n//             <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\n//               <a>{anime.title}</a>\n//             </Link>\n//           </li>\n//         ))}\n//     </ul>\n//   </Layout>\n// );\n// // Index.getInitialState = function(){\n// //   return {seasonValue: 'winter'};\n// // };\n// // Index.handleChange = function(e){\n// //    this.setState({seasonValue:e.target.value});\n// // }\n// Index.getInitialProps = async function() {\n//   const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.anime.length}`);\n//   console.log(`Season: ${data.season_name}`);\n//   return {\n//     anilist: data.anime,\n//     seasonName: data.season_name,\n//     seasonYear: data.season_year\n//   };\n// };\n// // Index.componentDidUpdate = function(){\n// // }\n// export default Index;\n\nvar MyCalendar = function MyCalendar(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    localizer: localizer // events = {props.shows.map((anime) =>{\n    //         [\n    //             {\n    //                 'title':anime.title,\n    //                 'start':anime.airing_start,\n    //                 'end':anime.airing_start\n    //             }\n    //         ]\n    // })}\n    ,\n    events: [{\n      'title': 'test',\n      'start': new Date(),\n      'end': new Date()\n    }],\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    defaultDate: moment().toDate(),\n    style: {\n      height: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })));\n};\n\nMyCalendar.getInitialProps = function _callee() {\n  var res, data, animeArr;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.jikan.moe/v3/season/2020/winter'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          //console.log(`Show data fetched. Count: ${data.length}`);\n          animeArr = data.anime.map(function (anime) {\n            return {\n              title: anime.title,\n              start: anime.airing_start,\n              end: anime.airing_start\n            };\n          }); //console.log(`${animeArr[0].title}`);\n\n          return _context.abrupt(\"return\", {\n            shows: data.anime\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","Layout","Link","fetch","Calendar","momentLocalizer","moment","localizer","MyCalendar","props","Date","toDate","height","getInitialProps","res","json","data","animeArr","anime","map","title","start","airing_start","end","shows"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,IAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjbA,UAAa,CAAAC,KAAK;AAAA,SAEtB,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,SAAS,EAAEF,SADf,CAEI;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAZJ;AAaI,IAAA,MAAM,EAAE,CAAC;AACL,eAAS,MADJ;AAEL,eAAS,IAAIG,IAAJ,EAFJ;AAGL,aAAO,IAAIA,IAAJ;AAHF,KAAD,CAbZ;AAkBI,IAAA,aAAa,EAAC,OAlBlB;AAmBI,IAAA,WAAW,EAAC,KAnBhB;AAoBI,IAAA,WAAW,EAAEJ,MAAM,GAAGK,MAAT,EApBjB;AAqBI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KArBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFA,CAFsB;AAAA,CAAxB;;AA+BAJ,UAAU,CAACK,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACTV,KAAK,CAAC,6CAAD,CADI;;AAAA;AACrBW,UAAAA,GADqB;AAAA;AAAA,2CAERA,GAAG,CAACC,IAAJ,EAFQ;;AAAA;AAErBC,UAAAA,IAFqB;AAI3B;AACIC,UAAAA,QALuB,GAKZD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAAAD,KAAK;AAAA,mBAAI;AACrCE,cAAAA,KAAK,EAAEF,KAAK,CAACE,KADwB;AAErCC,cAAAA,KAAK,EAAEH,KAAK,CAACI,YAFwB;AAGrCC,cAAAA,GAAG,EAAEL,KAAK,CAACI;AAH0B,aAAJ;AAAA,WAApB,CALY,EAY3B;;AAZ2B,2CAapB;AACHE,YAAAA,KAAK,EAAER,IAAI,CAACE;AADT,WAboB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAiBA,eAAeV,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../components/MyLayout.js';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nconst localizer = momentLocalizer(moment);\r\n//import MyCalendar from '../components/CalendarV2.js'\r\n\r\n// export default class Index extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     //this.handleChange = this.handleChange.bind(this);\r\n\r\n//     // this.state =\r\n//     // {\r\n//     //   seasonValue: 'winter',\r\n//     //   yearValue: new Date().getFullYear(),\r\n\r\n//     //   data: { anime: [] }\r\n//     // };\r\n//   }\r\n\r\n//   // handleChange(e) {\r\n//   //   // var season2 = seasonValue;\r\n//   //   this.setState({ seasonValue: e.target.value});\r\n\r\n//     //   if(this.state !== ''){\r\n\r\n\r\n//     //   const res = await fetch(`https://api.jikan.moe/v3/season/2020/${this.state.seasonValue}`);\r\n//     //   const data = await res.json();\r\n\r\n//     //   console.log(this.state);\r\n//     //   console.log(data.anime);\r\n\r\n//     //   return {\r\n//     //     anilist: data.anime,\r\n//     //     seasonName: data.season_name,\r\n//     //     seasonYear: data.season_year\r\n//     //   }\r\n//     // }\r\n\r\n// //}\r\n\r\n//   // async componentDidUpdate() {\r\n//   //   //Is this check  necessary??\r\n    \r\n    \r\n//   //   if (this.state.seasonValue !== '') {\r\n\r\n\r\n//   //     await fetch(`https://api.jikan.moe/v3/season/${this.state.yearValue}/${this.state.seasonValue}`)\r\n//   //       .then(data => data.json())\r\n//   //       .then(data => this.setState({ data }));\r\n\r\n\r\n//   //    // console.log(`Fetch Count: ${data.anime.length}`);\r\n    \r\n//   //     // return {\r\n//   //     //   anilist: data.anime,\r\n//   //     //   seasonName: data.season_name,\r\n//   //     //   seasonYear: data.season_year\r\n//   //     // }\r\n//   //   }\r\n//   // }\r\n//   async componentDidMount() {\r\n    \r\n\r\n//       // await fetch(`https://api.jikan.moe/v3/season/2020/spring`)\r\n//       // .then(data => data.json())\r\n//       // .then(data => this.setState({data}));\r\n\r\n//       //console.log(this.state.data.anime.length);\r\n      \r\n//     //   console.log(`Show data fetched. Count: ${data.anime.length}`);\r\n//     //   console.log(`Season: ${data.season_name}`);\r\n\r\n//   }\r\n//   render() {\r\n//     //console.log(this.state)\r\n    \r\n//     //const { data } = this.state;\r\n//     return (\r\n      \r\n//       <>\r\n//        <MyCalendar />\r\n//         {/* <select value={this.state.seasonValue} onChange={this.handleChange}>\r\n//           <option value=\"winter\">Winter</option>\r\n//           <option value=\"spring\">Spring</option>\r\n//           <option value=\"summer\">Summer</option>\r\n//           <option value=\"fall\">Fall</option>\r\n//         </select>\r\n\r\n\r\n//         <h1>{data.season_name} {data. season_year}</h1>\r\n//         {/* {console.log('hello')} */}\r\n//         {/* <ul>\r\n\r\n//           {data.anime.map(anime => {\r\n//             return (\r\n//               <li key={anime.mal_id}>\r\n//                 <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\r\n//                   <a>{anime.title}</a>\r\n//                 </Link>\r\n//               </li>\r\n//             )\r\n//           })}\r\n//         </ul> */} \r\n        \r\n//       </>\r\n      \r\n\r\n\r\n//     )\r\n//   }\r\n// }\r\n// const Index = props => (\r\n//   //Something isn't right about the logic here. Maybe dropdown shouldn't be here.\r\n//   <Layout>\r\n\r\n//     {/* <select value={props.value} onChange={props.handleChange}>\r\n//       <option value = \"winter\">Winter</option>\r\n//       <option value = \"spring\">Spring</option>\r\n//       <option value = \"summer\">Summer</option>\r\n//       <option value = \"fall\">Fall</option>\r\n//     </select> */}\r\n//     <h1>{props.seasonName} {props.seasonYear}</h1>\r\n//     <ul>\r\n//       {props.anilist.map(anime => (\r\n//           <li key = {anime.mal_id}>\r\n//             <Link href=\"/p/[id]\" as={`/p/${anime.mal_id}`}>\r\n//               <a>{anime.title}</a>\r\n//             </Link>\r\n//           </li>\r\n//         ))}\r\n//     </ul>\r\n//   </Layout>\r\n\r\n// );\r\n// // Index.getInitialState = function(){\r\n// //   return {seasonValue: 'winter'};\r\n\r\n// // };\r\n// // Index.handleChange = function(e){\r\n\r\n// //    this.setState({seasonValue:e.target.value});\r\n\r\n\r\n\r\n// // }\r\n\r\n// Index.getInitialProps = async function() {\r\n\r\n\r\n\r\n//   const res = await fetch(`https://api.jikan.moe/v3/season/2020/winter`);\r\n//   const data = await res.json();\r\n\r\n//   console.log(`Show data fetched. Count: ${data.anime.length}`);\r\n//   console.log(`Season: ${data.season_name}`);\r\n\r\n\r\n//   return {\r\n//     anilist: data.anime,\r\n//     seasonName: data.season_name,\r\n//     seasonYear: data.season_year\r\n//   };\r\n\r\n// };\r\n// // Index.componentDidUpdate = function(){\r\n\r\n// // }\r\n\r\n// export default Index;\r\nconst MyCalendar = props => (\r\n    \r\n  <>\r\n  {/* {console.log(props.shows)} */}\r\n  <div>\r\n      <Calendar\r\n          localizer={localizer}\r\n          // events = {props.shows.map((anime) =>{\r\n              \r\n          //         [\r\n          //             {\r\n          //                 'title':anime.title,\r\n          //                 'start':anime.airing_start,\r\n          //                 'end':anime.airing_start\r\n          //             }\r\n          //         ]\r\n              \r\n          // })}\r\n          events={[{\r\n              'title': 'test',\r\n              'start': new Date(),\r\n              'end': new Date()\r\n          }]}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          defaultDate={moment().toDate()}\r\n          style={{ height: 500 }}\r\n      />\r\n  </div>\r\n  </>\r\n);\r\nMyCalendar.getInitialProps = async function () {\r\n  const res = await fetch('https://api.jikan.moe/v3/season/2020/winter');\r\n  const data = await res.json();\r\n\r\n  //console.log(`Show data fetched. Count: ${data.length}`);\r\n  var animeArr = data.anime.map(anime =>({\r\n    title: anime.title,\r\n    start: anime.airing_start,\r\n    end: anime.airing_start\r\n  }\r\n\r\n  ));\r\n  //console.log(`${animeArr[0].title}`);\r\n  return {\r\n      shows: data.anime\r\n  };\r\n};\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}