{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\CalendarV2.js\";\nvar __jsx = React.createElement;\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment'; //import event from './event'\n\nimport fetch from 'isomorphic-unfetch';\nimport React, { Component } from 'react';\nvar localizer = momentLocalizer(moment);\n\nvar MyCalendar = function MyCalendar(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    localizer: localizer // events = {props.shows.map(anime =>{\n    //     return(\n    //         [\n    //             {\n    //                 'title':anime.title,\n    //                 'start':anime.airing_start,\n    //                 'end':anime.airing_start\n    //             }\n    //         ]\n    //     )\n    // })}\n    //events={props.animeArr}\n    ,\n    events: [{\n      title: 'hello',\n      start: new Date(),\n      end: new Date()\n    }],\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    defaultDate: moment().toDate(),\n    style: {\n      height: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nMyCalendar.getInitialProps = function _callee() {\n  var res, data, animeArr;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.jikan.moe/v3/season/2020/winter'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          //console.log(`Show data fetched. Count: ${data.length}`);\n          animeArr = data.anime.map(function (anime) {\n            return {\n              title: anime.title,\n              start: anime.airing_start,\n              end: anime.airing_start\n            };\n          });\n          console.log(\"\".concat(animeArr[0].title));\n          return _context.abrupt(\"return\", {\n            animeArr: animeArr\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/CalendarV2.js"],"names":["Calendar","momentLocalizer","moment","fetch","React","Component","localizer","MyCalendar","props","title","start","Date","end","toDate","height","getInitialProps","res","json","data","animeArr","anime","map","airing_start","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,SAAS,GAAGL,eAAe,CAACC,MAAD,CAAjC;;AAEA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAIhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,SAAS,EAAEF,SADf,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbJ;AAcI,IAAA,MAAM,EAAI,CACN;AACIG,MAAAA,KAAK,EAAE,OADX;AAEIC,MAAAA,KAAK,EAAE,IAAIC,IAAJ,EAFX;AAGIC,MAAAA,GAAG,EAAE,IAAID,IAAJ;AAHT,KADM,CAdd;AAqBI,IAAA,aAAa,EAAC,OArBlB;AAsBI,IAAA,WAAW,EAAC,KAtBhB;AAuBI,IAAA,WAAW,EAAET,MAAM,GAAGW,MAAT,EAvBjB;AAwBI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAxBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJgB;AAAA,CAAxB;;AAkCAP,UAAU,CAACQ,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPZ,KAAK,CAAC,6CAAD,CADE;;AAAA;AACnBa,UAAAA,GADmB;AAAA;AAAA,2CAENA,GAAG,CAACC,IAAJ,EAFM;;AAAA;AAEnBC,UAAAA,IAFmB;AAIzB;AACIC,UAAAA,QALqB,GAKVD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAAAD,KAAK;AAAA,mBAAK;AACpCX,cAAAA,KAAK,EAAEW,KAAK,CAACX,KADuB;AAEpCC,cAAAA,KAAK,EAAEU,KAAK,CAACE,YAFuB;AAGpCV,cAAAA,GAAG,EAAEQ,KAAK,CAACE;AAHyB,aAAL;AAAA,WAApB,CALU;AAYzBC,UAAAA,OAAO,CAACC,GAAR,WAAeL,QAAQ,CAAC,CAAD,CAAR,CAAYV,KAA3B;AAZyB,2CAalB;AACHU,YAAAA,QAAQ,EAARA;AADG,WAbkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAiBA,eAAeZ,UAAf","sourcesContent":["import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n//import event from './event'\r\nimport fetch from 'isomorphic-unfetch';\r\nimport React, { Component } from 'react';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MyCalendar = props => (\r\n\r\n    \r\n        \r\n        <div>\r\n            <Calendar\r\n                localizer={localizer}\r\n                // events = {props.shows.map(anime =>{\r\n                //     return(\r\n                //         [\r\n                //             {\r\n                //                 'title':anime.title,\r\n                //                 'start':anime.airing_start,\r\n                //                 'end':anime.airing_start\r\n                //             }\r\n                //         ]\r\n                //     )\r\n                // })}\r\n                //events={props.animeArr}\r\n                events = {[\r\n                    {\r\n                        title: 'hello',\r\n                        start: new Date(),\r\n                        end: new Date()\r\n                    }\r\n                ]}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                defaultDate={moment().toDate()}\r\n                style={{ height: 500 }}\r\n            />\r\n        </div>\r\n    \r\n);\r\nMyCalendar.getInitialProps = async function () {\r\n    const res = await fetch('https://api.jikan.moe/v3/season/2020/winter');\r\n    const data = await res.json();\r\n\r\n    //console.log(`Show data fetched. Count: ${data.length}`);\r\n    var animeArr = data.anime.map(anime => ({\r\n        title: anime.title,\r\n        start: anime.airing_start,\r\n        end: anime.airing_start\r\n    }\r\n\r\n    ));\r\n    console.log(`${animeArr[0].title}`);\r\n    return {\r\n        animeArr\r\n    };\r\n};\r\nexport default MyCalendar;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}