{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react'; //import Layout from '../components/MyLayout.js';\n//import Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport Popover from '@material-ui/core/Popover'; //import MyCalendar from '../components/Calendar.js'\n\nimport MouseOverPopover from '../components/popover.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography'; //import { Popover } from '@material-ui/core';\n\nimport Button from '@material-ui/core/Button';\nimport Header from '../components/Header.js';\nimport Layout from '../components/MyLayout.js';\nimport Dailies from '../components/Dailies.js';\nconst localizer = momentLocalizer(moment);\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    pointerEvents: 'auto'\n  }\n}));\n\nconst MyCalendar = props => {\n  function getCustomToolbar(toolbar) {\n    const goToBack = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() - 1, 1);\n      toolbar.onNavigate('prev', newDate);\n    };\n\n    const goToNext = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() + 1, 1);\n      toolbar.onNavigate('next', newDate);\n    };\n\n    const goToCurrent = () => {\n      const now = new Date();\n      toolbar.date.setMonth(now.getMonth());\n      toolbar.date.setYear(now.getFullYear());\n      toolbar.onNavigate('current');\n    };\n\n    const label = () => {\n      const date = moment(toolbar.date);\n      return __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, date.format('MMMM')), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" \", date.format('YYYY')));\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, label()), __jsx(\"div\", {\n      className: \"rbc-toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"rbc-btn-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"prev-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\u2039\")), __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToCurrent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"next-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Today\")), __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"next-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\u203A\")))));\n  }\n\n  ;\n\n  function EventPop(event) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handlePopoverOpen = event => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      onMouseEnter: handlePopoverOpen,\n      onMouseLeave: handlePopoverClose,\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, event.title), __jsx(Popover, {\n      id: \"simple-menu\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      disableRestoreFocus: true // onClick={handlePopoverClose}\n      // onMouseLeave={handlePopoverClose}\n      ,\n      PaperProps: {\n        onMouseEnter: handlePopoverOpen,\n        onMouseLeave: handlePopoverClose\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, event.title, event.score), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      src: event.event.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })))));\n  }\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(Header, {\n    className: \"top-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Released Today\"), __jsx(Dailies, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    style: {\n      height: 600\n    },\n    tooltipAccessor: null,\n    popup: true,\n    localizer: localizer,\n    events: props.animeArr,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    defaultDate: moment().toDate(),\n    components: {\n      event: EventPop,\n      toolbar: getCustomToolbar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))));\n};\n\nMyCalendar.getInitialProps = async function () {\n  const res = await fetch('https://api.jikan.moe/v3/season');\n  const data = await res.json(); //Make Date Object work with event\n\n  var animeArr = data.anime.map(anime => ({\n    title: anime.title,\n    start: anime.airing_start,\n    end: anime.airing_start,\n    image: anime.image_url,\n    score: anime.score\n  }));\n  console.log(data.anime[0].score);\n  console.log(data.anime[0].title);\n  return {\n    relData: data.anime,\n    animeArr\n  };\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","fetch","Calendar","momentLocalizer","moment","Popover","MouseOverPopover","makeStyles","Typography","Button","Header","Layout","Dailies","localizer","useStyles","theme","popover","pointerEvents","paper","padding","spacing","MyCalendar","props","getCustomToolbar","toolbar","goToBack","mDate","date","newDate","Date","getFullYear","getMonth","onNavigate","goToNext","goToCurrent","now","setMonth","setYear","label","format","EventPop","event","classes","anchorEl","setAnchorEl","useState","handlePopoverOpen","currentTarget","handlePopoverClose","open","Boolean","title","vertical","horizontal","onMouseEnter","onMouseLeave","score","image","height","animeArr","toDate","getInitialProps","res","data","json","anime","map","start","airing_start","end","image_url","console","log","relData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Layout from '../components/MyLayout.js';\r\n//import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport Popover from '@material-ui/core/Popover';\r\n//import MyCalendar from '../components/Calendar.js'\r\nimport MouseOverPopover from '../components/popover.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import { Popover } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Header from '../components/Header.js'\r\nimport Layout from '../components/MyLayout.js'\r\nimport Dailies from '../components/Dailies.js'\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    pointerEvents: 'auto'\r\n  },\r\n}))\r\n\r\nconst MyCalendar = props => {\r\n  function getCustomToolbar(toolbar)\r\n  {\r\n    \r\n\r\n   \r\n    const goToBack = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() - 1,\r\n        1);\r\n      toolbar.onNavigate('prev', newDate);\r\n      \r\n    \r\n    }\r\n    const goToNext = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() + 1,\r\n        1);\r\n      toolbar.onNavigate('next', newDate);\r\n      \r\n    \r\n    }\r\n    const goToCurrent = () => {\r\n      const now = new Date();\r\n      toolbar.date.setMonth(now.getMonth());\r\n      toolbar.date.setYear(now.getFullYear());\r\n      toolbar.onNavigate('current');\r\n    };\r\n  \r\n    const label = () => {\r\n      const date = moment(toolbar.date);\r\n      return (\r\n        <span><b>{date.format('MMMM')}</b><span> {date.format('YYYY')}</span></span>\r\n      );\r\n    };\r\n  \r\n    return (\r\n      <>\r\n      <label>{label()}</label>\r\n      <div className=\"rbc-toolbar\">\r\n\r\n\r\n\r\n\r\n        <div className=\"rbc-btn-group\">\r\n          <button type=\"button\" onClick={goToBack}>\r\n            <span className=\"prev-icon\">&#8249;</span>\r\n          </button>\r\n          <button type=\"button\" onClick={goToCurrent}>\r\n            <span className=\"next-icon\">Today</span>\r\n          </button>\r\n          <button type=\"button\" onClick={goToNext}>\r\n            <span className=\"next-icon\">&#8250;</span>\r\n          </button>\r\n        </div>\r\n      </div >\r\n      </>\r\n    )\r\n  };\r\n  function EventPop(event) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handlePopoverOpen = event => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    \r\n    const open = Boolean(anchorEl);\r\n    return (\r\n      <>\r\n        <div>\r\n        <div\r\n          onMouseEnter={handlePopoverOpen}\r\n          onMouseLeave={handlePopoverClose}\r\n          aria-controls=\"simple-menu\" \r\n          aria-haspopup={true}\r\n        >\r\n          {event.title}\r\n          \r\n        </div>\r\n        <Popover\r\n            id='simple-menu'\r\n            className={classes.popover}\r\n            classes={{\r\n              paper: classes.paper,\r\n            }}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n\r\n            disableRestoreFocus\r\n            // onClick={handlePopoverClose}\r\n            // onMouseLeave={handlePopoverClose}\r\n            PaperProps={{onMouseEnter: handlePopoverOpen, onMouseLeave: handlePopoverClose}}\r\n          >\r\n            <div>\r\n              \r\n              <div>\r\n              {event.title}\r\n              {event.score}\r\n              </div>\r\n              <br />\r\n              <img src={event.event.image} />\r\n            </div>\r\n          </Popover>\r\n            </div>\r\n      </>\r\n    )\r\n\r\n\r\n  };\r\n  return (\r\n    <>\r\n      \r\n      <div >\r\n        <Header className=\"top-bar\" />\r\n        <div>\r\n          <h3>Released Today</h3>\r\n          <Dailies />\r\n        </div>\r\n        <div className={\"grid-container\"}>\r\n        <Calendar\r\n          \r\n          style={{ height: 600 }}\r\n\r\n          tooltipAccessor={null}\r\n          popup\r\n          localizer={localizer}\r\n          events={props.animeArr}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n\r\n          defaultDate={moment().toDate()}\r\n\r\n          components={{\r\n            event: EventPop,\r\n            toolbar: getCustomToolbar\r\n          }}\r\n\r\n        />\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nMyCalendar.getInitialProps = async function () {\r\n  const res = await fetch('https://api.jikan.moe/v3/season');\r\n  const data = await res.json();\r\n\r\n  //Make Date Object work with event\r\n  var animeArr = data.anime.map(anime => ({\r\n    title: anime.title,\r\n    start: anime.airing_start,\r\n    end: anime.airing_start,\r\n    image: anime.image_url,\r\n    score: anime.score\r\n  }\r\n  \r\n  ));\r\n  console.log(data.anime[0].score);\r\n  console.log(data.anime[0].title);\r\n  \r\n  return {\r\n    relData: data.anime,\r\n    animeArr\r\n\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}