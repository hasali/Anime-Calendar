{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport Popover from '@material-ui/core/Popover';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactSVG } from 'react-svg';\nimport { useState } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //My Components\n\nimport events from '../assets/events.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Dailies from '../components/Dailies.js';\nimport IconSvg from '../assets/img/score_icon.svg';\nimport { purple } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport eventStyles from '../assets/css/custEvents.module.css'; //My Styles\n\nimport styles from '../assets/css/main.module.css';\nimport { Hidden } from '@material-ui/core';\nimport calStyles from '../assets/css/rbc.module.css';\nconst localizer = momentLocalizer(moment);\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    width: '235px',\n    //Width of MAL images\n    //height:'430px',\n    position: \"absolute\",\n    overflow: \"hidden\",\n    padding: theme.spacing(0.6),\n    pointerEvents: 'auto'\n  },\n  darkbg: {\n    background: 'black'\n  }\n}));\n\nconst MyCalendar = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    isDark: false\n  });\n\n  const handleChange = event => {\n    setState(_objectSpread({}, state, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  function getCustomToolbar(toolbar) {\n    const goToBack = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() - 1, 1);\n      toolbar.onNavigate('prev', newDate);\n    };\n\n    const goToNext = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() + 1, 1);\n      toolbar.onNavigate('next', newDate);\n    };\n\n    const goToCurrent = () => {\n      const now = new Date();\n      toolbar.date.setMonth(now.getMonth());\n      toolbar.date.setYear(now.getFullYear());\n      toolbar.onNavigate('current');\n    };\n\n    const label = () => {\n      const date = moment(toolbar.date);\n      return __jsx(\"span\", {\n        className: state.isDark ? 'dark-theme' : 'light-theme',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, date.format('MMMM')), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" \", date.format('YYYY')));\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"text-center align-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"rbc-toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"rbc-btn-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"prev-icon \" + (state.isDark ? 'dark-theme' : 'light-theme'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\u2039\")), __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToCurrent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"next-icon \" + (state.isDark ? 'dark-theme' : 'light-theme'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Today\")), __jsx(\"button\", {\n      type: \"button\",\n      onClick: goToNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"next-icon \" + (state.isDark ? 'dark-theme' : 'light-theme'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\u203A\")))), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, label())), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })));\n  }\n\n  ; //Move this into 'components'?\n\n  function EventPop(event) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handlePopoverOpen = event => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      onMouseEnter: handlePopoverOpen,\n      onMouseLeave: handlePopoverClose,\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, event.title), __jsx(Popover, {\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      disableRestoreFocus: true // onClick={handlePopoverClose}\n      // onMouseLeave={handlePopoverClose}\n      ,\n      PaperProps: {\n        onMouseEnter: handlePopoverOpen,\n        onMouseLeave: handlePopoverClose\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: event.event.url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, event.title)), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, __jsx(IconSvg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), event.event.score), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles.bind,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: event.event.image,\n      alt: event.title,\n      className: styles.blur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: styles.screen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: styles.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, event.event.desc)))))));\n  }\n\n  ;\n\n  function EventAgenda({\n    event\n  }) {\n    return __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, __jsx(\"em\", {\n      style: {\n        color: 'magenta'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, event.title));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: `${styles.bgc} ${state.isDark ? styles.light : null}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, __jsx(Header, {\n    isDark: state.isDark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"grid-x text-center align-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    style: {\n      fontFamily: 'Dosis'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Released Today\"), __jsx(Dailies, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    style: {\n      height: 650\n    },\n    tooltipAccessor: null,\n    popup: true,\n    localizer: localizer,\n    events: props.animeArr //events={events}\n    ,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    defaultDate: moment().toDate(),\n    eventPropGetter: (event, start, end, isSelected) => {\n      var newStyle = {\n        backgroundColor: 'rgba(31, 125, 247, 0.7)'\n      };\n\n      if (state.isDark) {\n        newStyle.backgroundColor = 'rgba(175, 16, 43, 0.89)';\n      }\n\n      ;\n      return {\n        style: newStyle\n      };\n    },\n    dayPropGetter: (event, start, end, isSelected) => {\n      var newStyle = {\n        backgroundColor: 'rgba(255,255,255)'\n      };\n\n      if (state.isDark) {\n        newStyle.backgroundColor = '#36393f';\n      }\n\n      ;\n      return {\n        style: newStyle\n      };\n    },\n    components: {\n      event: EventPop,\n      //event: EventAgenda,\n      toolbar: getCustomToolbar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }), __jsx(Footer, {\n    isDark: state.isDark,\n    name: \"isDark\",\n    change: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  })));\n};\n\nMyCalendar.getInitialProps = async function () {\n  const res = await fetch('https://api.jikan.moe/v3/season');\n  const data = await res.json();\n\n  if (data) {\n    var animeArr = data.anime.map(anime => ({\n      title: anime.title,\n      url: anime.url,\n      desc: anime.synopsis,\n      start: anime.airing_start,\n      end: anime.airing_start,\n      image: anime.image_url,\n      score: anime.score\n    }));\n    return {\n      relData: data.anime,\n      animeArr\n    };\n  } else {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n  console.log(data.anime[0].score);\n  console.log(data.anime[0].title);\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","fetch","Calendar","momentLocalizer","moment","Popover","makeStyles","ReactSVG","useState","FormGroup","FormControlLabel","events","Header","Footer","Dailies","IconSvg","purple","Switch","eventStyles","styles","Hidden","calStyles","localizer","useStyles","theme","popover","pointerEvents","paper","width","position","overflow","padding","spacing","darkbg","background","MyCalendar","props","state","setState","isDark","handleChange","event","target","name","checked","getCustomToolbar","toolbar","goToBack","mDate","date","newDate","Date","getFullYear","getMonth","onNavigate","goToNext","goToCurrent","now","setMonth","setYear","label","format","EventPop","classes","anchorEl","setAnchorEl","handlePopoverOpen","currentTarget","handlePopoverClose","open","Boolean","title","vertical","horizontal","onMouseEnter","onMouseLeave","url","score","bind","image","blur","screen","description","desc","EventAgenda","color","bgc","light","fontFamily","height","animeArr","toDate","start","end","isSelected","newStyle","backgroundColor","style","getInitialProps","res","data","json","anime","map","synopsis","airing_start","image_url","relData","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ReactSVG } from 'react-svg';\r\nimport  { useState } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n//My Components\r\nimport events from '../assets/events.js'\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Dailies from '../components/Dailies.js'\r\nimport IconSvg from '../assets/img/score_icon.svg';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport eventStyles from '../assets/css/custEvents.module.css'\r\n//My Styles\r\nimport styles from '../assets/css/main.module.css'\r\nimport { Hidden } from '@material-ui/core';\r\nimport calStyles from '../assets/css/rbc.module.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    width: '235px', //Width of MAL images\r\n    //height:'430px',\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0.6),\r\n    pointerEvents: 'auto',\r\n    \r\n  },\r\n  darkbg:{\r\n    \r\n    background: 'black'\r\n  },\r\n}))\r\n\r\nconst MyCalendar = props => {\r\n  \r\n  const [state, setState] = useState({isDark: false});\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  function getCustomToolbar(toolbar) {\r\n\r\n\r\n\r\n    const goToBack = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() - 1,\r\n        1);\r\n      toolbar.onNavigate('prev', newDate);\r\n\r\n\r\n    }\r\n    const goToNext = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() + 1,\r\n        1);\r\n      toolbar.onNavigate('next', newDate);\r\n\r\n\r\n    }\r\n    const goToCurrent = () => {\r\n      const now = new Date();\r\n      toolbar.date.setMonth(now.getMonth());\r\n      toolbar.date.setYear(now.getFullYear());\r\n      toolbar.onNavigate('current');\r\n    };\r\n\r\n    const label = () => {\r\n      const date = moment(toolbar.date);\r\n      return (\r\n        <span className={(state.isDark ? 'dark-theme':'light-theme')}><b>{date.format('MMMM')}</b><span> {date.format('YYYY')}</span></span>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <>\r\n      \r\n        <div className=\"text-center align-center\" >\r\n          <div className=\"rbc-toolbar\">\r\n            <div className=\"rbc-btn-group\">\r\n              <button type=\"button\" onClick={goToBack}>\r\n                <span className={\"prev-icon \"+ (state.isDark ? 'dark-theme':'light-theme')}>&#8249;</span>\r\n              </button>\r\n              <button type=\"button\" onClick={goToCurrent}>\r\n                <span className={\"next-icon \"+ (state.isDark ? 'dark-theme':'light-theme')}>Today</span>\r\n              </button>\r\n              <button type=\"button\" onClick={goToNext}>\r\n                <span className={\"next-icon \"+ (state.isDark ? 'dark-theme':'light-theme')}>&#8250;</span>\r\n              </button>\r\n            </div>\r\n          </div >\r\n          <div><label>{label()}</label></div>\r\n          <br/>\r\n        </div>\r\n        \r\n      </>\r\n    )\r\n  };\r\n  //Move this into 'components'?\r\n  function EventPop(event) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handlePopoverOpen = event => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    \r\n    return (\r\n      <>\r\n        <div>\r\n          <div\r\n            onMouseEnter={handlePopoverOpen}\r\n            onMouseLeave={handlePopoverClose}\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup={true}\r\n          >\r\n            {event.title}\r\n\r\n          </div>\r\n          <Popover\r\n\r\n            className={classes.popover}\r\n            classes={{\r\n              paper: classes.paper, \r\n              \r\n            }}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n\r\n            disableRestoreFocus\r\n            // onClick={handlePopoverClose}\r\n            // onMouseLeave={handlePopoverClose}\r\n            PaperProps={{ onMouseEnter: handlePopoverOpen, onMouseLeave: handlePopoverClose }}\r\n          >\r\n\r\n            <div>\r\n              <div>\r\n                <a href={event.event.url} target=\"_blank\">{event.title}</a>\r\n              </div>\r\n              <div>\r\n                <IconSvg />\r\n                {event.event.score}\r\n\r\n              </div>\r\n              <br />\r\n              <div>\r\n                \r\n                <div className={styles.bind}>\r\n                  \r\n                   <img src={event.event.image} alt={event.title} className={styles.blur}/>\r\n                   <div className={styles.screen}></div>\r\n                 \r\n                \r\n                  <div className={styles.description}>\r\n                    {event.event.desc}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            \r\n\r\n\r\n\r\n            </div>\r\n\r\n          </Popover>\r\n        </div>\r\n      </>\r\n    )\r\n\r\n\r\n  };\r\n  function EventAgenda({ event }) {\r\n    return (\r\n      <span>\r\n        <em style={{ color: 'magenta' }}>{event.title}</em>\r\n        \r\n      </span>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <>\r\n\r\n      <div className={`${styles.bgc} ${state.isDark ? styles.light : null}`}>\r\n        <Header isDark={state.isDark} />\r\n        <br/>    \r\n        <div className=\"grid-x text-center align-center\">\r\n          <div>\r\n            <h4 style={{fontFamily:'Dosis'}}>Released Today</h4>\r\n\r\n            <Dailies />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className={\"grid-container\"}>\r\n          <Calendar\r\n            \r\n            style={{ height: 650 }}\r\n\r\n            tooltipAccessor={null}\r\n            popup\r\n            localizer={localizer}\r\n            events={props.animeArr}\r\n            //events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n\r\n            defaultDate={moment().toDate()}\r\n            eventPropGetter={\r\n              (event, start, end, isSelected) =>{\r\n                var newStyle= {backgroundColor: 'rgba(31, 125, 247, 0.7)'};\r\n\r\n                if(state.isDark){\r\n                  newStyle.backgroundColor = 'rgba(175, 16, 43, 0.89)'\r\n                };\r\n\r\n                return{\r\n                  \r\n                  style: newStyle\r\n                };\r\n              }\r\n            }\r\n            dayPropGetter={\r\n              (event, start, end, isSelected) =>{\r\n                var newStyle= {backgroundColor: 'rgba(255,255,255)'};\r\n\r\n                if(state.isDark){\r\n                  newStyle.backgroundColor = '#36393f'\r\n                };\r\n\r\n                return{\r\n                  \r\n                  style: newStyle\r\n                };\r\n              }\r\n            }\r\n            components={{\r\n              event: EventPop,\r\n              //event: EventAgenda,\r\n              toolbar: getCustomToolbar\r\n            }}\r\n\r\n          />\r\n          \r\n        </div>\r\n        <br />\r\n        <br />\r\n        \r\n        <Footer isDark={state.isDark} name=\"isDark\" change={handleChange}/>\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nMyCalendar.getInitialProps = async function () {\r\n  const res = await fetch('https://api.jikan.moe/v3/season');\r\n  const data = await res.json();\r\n\r\n  if (data) {\r\n    var animeArr = data.anime.map(anime => ({\r\n      title: anime.title,\r\n      url: anime.url,\r\n      desc: anime.synopsis,\r\n      start: anime.airing_start,\r\n      end: anime.airing_start,\r\n      image: anime.image_url,\r\n      score: anime.score\r\n    }\r\n\r\n    ));\r\n    return {\r\n      relData: data.anime,\r\n      animeArr\r\n  \r\n    };\r\n  }\r\n  else{\r\n    return <div>Loading</div>;\r\n  }\r\n  console.log(data.anime[0].score);\r\n  console.log(data.anime[0].title);\r\n\r\n  \r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}