{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport widgetMomentLocalizer from 'react-widgets-moment';\nimport moment from 'moment';\nimport Popover from '@material-ui/core/Popover';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactSVG } from 'react-svg'; //import  { useState } from 'react';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; //import React, { useState, useEffect } from \"react\";\n//import DatePicker from 'react-datepicker';\n\nimport DatePicker from 'react-widgets/lib/DateTimePicker'; //My Components\n\nimport events from '../assets/events.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Dailies from '../components/Dailies.js'; //import calIcon from '../assets/img/calIcon.png'\n\nimport IconSvg from '../assets/img/score_icon.svg';\nimport { purple, red } from '@material-ui/core/colors';\nimport Switch from '@material-ui/core/Switch';\nimport eventStyles from '../assets/css/custEvents.module.css'; //My Styles\n\nimport styles from '../assets/css/main.module.css';\nimport { Hidden } from '@material-ui/core';\nimport calStyles from '../assets/css/rbc.module.css';\nimport shadows from '@material-ui/core/styles/shadows';\nimport color from '@material-ui/core/colors/amber';\nimport { getSeason } from '../assets/Helpers';\nmoment.locale('en');\nwidgetMomentLocalizer();\nconst localizer = momentLocalizer(moment);\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    width: '235px',\n    //Width of MAL images\n    height: '430px',\n    position: \"absolute\",\n    overflow: \"hidden\",\n    padding: theme.spacing(0.6),\n    pointerEvents: 'auto',\n    fontFamily: 'Dosis'\n  },\n  darkbg: {\n    width: '235px',\n    //Width of MAL images\n    height: '430px',\n    position: \"absolute\",\n    overflow: \"hidden\",\n    padding: theme.spacing(0.6),\n    pointerEvents: 'auto',\n    fontFamily: 'Dosis',\n    background: '#2f3136',\n    color: '#f2f3f5'\n  }\n}));\n\nconst MyCalendar = props => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    isDark: false\n  });\n  const {\n    0: currDate,\n    1: setCurrDate\n  } = useState(new Date());\n  const {\n    0: hasError,\n    1: setErrors\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    anime: []\n  });\n\n  const handleChange = event => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: event.target.checked\n    }));\n  };\n\n  var year = currDate.getFullYear();\n  var month = currDate.getMonth() + 1;\n  var animeArr;\n  var textTheme = state.isDark ? 'dark-text' : 'light-text';\n  var bgTheme = state.isDark ? 'dark-bg' : 'light-bg';\n  console.log(year);\n  console.log(month);\n\n  async function fetchData() {\n    const res = await fetch(`https://api.jikan.moe/v3/season/${year}/${getSeason(month)}`); //const res = await fetch(`https://api.jikan.moe/v3/season/archive`);\n\n    res.json().then(res => setData(res)).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  animeArr = data.anime.map(anime => {\n    return {\n      title: anime.title,\n      url: anime.url,\n      desc: anime.synopsis,\n      start: anime.airing_start,\n      end: anime.airing_start,\n      image: anime.image_url,\n      score: anime.score\n    };\n  });\n\n  function getCustomToolbar(toolbar) {\n    const goToBack = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() - 1, 1);\n      toolbar.onNavigate('prev', newDate);\n      fetchData();\n      setCurrDate(newDate);\n    };\n\n    const goToNext = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() + 1, 1);\n      toolbar.onNavigate('next', newDate);\n      console.log(newDate.getMonth() + 1);\n      fetchData();\n      setCurrDate(newDate);\n    };\n\n    const goToCurrent = () => {\n      const now = new Date();\n      toolbar.date.setMonth(now.getMonth());\n      toolbar.date.setYear(now.getFullYear());\n      toolbar.date.onNavigate('current');\n      setCurrDate(now);\n    };\n\n    const datePicker = date => {\n      //toolbar.onNavigate(date);\n      setCurrDate(date);\n      fetchData();\n    }; // const monthLabel = () => {\n    //   const date = moment(setCurrDate(toolbar.date));\n    //   return (\n    //     <span className={textTheme}><b>{date.format('MMMM')}</b><span> {date.format('YYYY')}</span></span>\n    //   );\n    // };\n    //const [startDate, setStartDate] = useState(new Date());\n\n\n    const CustomCalendarIcon = React.forwardRef(({\n      onClick\n    }, ref) => __jsx(\"div\", {\n      ref: ref,\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, __jsx(\"img\", {\n      src: \"./calIcon.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    })));\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"text-center align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"rbc-toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"rbc-btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: bgTheme,\n      type: \"button\",\n      onClick: goToBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: \"prev-icon \" + textTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \"\\u2039\")), __jsx(\"button\", {\n      className: bgTheme,\n      type: \"button\",\n      onClick: goToCurrent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      className: \"next-icon \" + textTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Today\")), __jsx(\"button\", {\n      className: bgTheme,\n      type: \"button\",\n      onClick: goToNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      className: \"next-icon \" + textTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"\\u203A\")))), __jsx(\"div\", {\n      className: \"rbc-btn-group \" + styles.test,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, __jsx(DatePicker, {\n      className: styles.test,\n      time: false,\n      value: currDate,\n      defaultView: \"year\",\n      views: ['year'],\n      onChange: value => datePicker(value),\n      format: \"MMMM YYYY\",\n      footer: false //showMonthYearPicker\n      //customInput={<CustomCalendarIcon />}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n  ; //Move this into 'components'?\n\n  function EventPop(event) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handlePopoverOpen = event => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      onMouseEnter: handlePopoverOpen,\n      onMouseLeave: handlePopoverClose,\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, event.title), __jsx(Popover, {\n      className: classes.popover,\n      classes: state.isDark ? {\n        paper: classes.darkbg\n      } : {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      disableRestoreFocus: true // onClick={handlePopoverClose}\n      // onMouseLeave={handlePopoverClose}\n      ,\n      PaperProps: {\n        onMouseEnter: handlePopoverOpen,\n        onMouseLeave: handlePopoverClose\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: state.isDark ? styles.title : null,\n      href: event.event.url,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, event.title)), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, __jsx(IconSvg, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }), event.event.score), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: styles.bind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: event.event.image,\n      alt: event.title,\n      className: styles.blur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 20\n      }\n    }), __jsx(\"div\", {\n      className: state.isDark ? null : styles.screen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 20\n      }\n    }), __jsx(\"div\", {\n      className: styles.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, event.event.desc)))))));\n  }\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: `${styles.bgc} ${state.isDark ? styles.light : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    isDark: state.isDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-x text-center align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, __jsx(\"h4\", {\n    style: {\n      fontFamily: 'Dosis'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, \"Released Today\"), __jsx(Dailies, {\n    isDark: state.isDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, __jsx(Calendar, {\n    style: {\n      height: 650\n    },\n    tooltipAccessor: null,\n    popup: true,\n    localizer: localizer,\n    events: animeArr //events={events}\n    ,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    date: currDate,\n    onNavigate: date => setCurrDate(date),\n    defaultDate: moment().toDate(),\n    eventPropGetter: (event, start, end, isSelected) => {\n      var newStyle = {\n        backgroundColor: 'rgba(31, 125, 247, 0.7)'\n      };\n\n      if (state.isDark) {\n        newStyle.backgroundColor = 'rgba(175, 16, 43, 0.89)';\n      }\n\n      ;\n      return {\n        style: newStyle\n      };\n    },\n    dayPropGetter: (event, start, end, isSelected) => {\n      var newStyle = {\n        backgroundColor: 'rgba(255,255,255)'\n      };\n\n      if (state.isDark) {\n        newStyle.backgroundColor = '#36393f';\n      }\n\n      ;\n      return {\n        style: newStyle\n      };\n    },\n    components: {\n      event: EventPop,\n      //event: EventAgenda,\n      toolbar: getCustomToolbar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }), __jsx(Footer, {\n    isDark: state.isDark,\n    name: \"isDark\",\n    change: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MyCalendar; // export const getServerSideProps = async function () {\n//   const year = new Intl.DateTimeFormat('en', {year:'numeric'}).format(dateForFetch);\n//   const month = new Intl.DateTimeFormat('en', { month: 'long' }).format(dateForFetch);\n//   const res = await fetch(`https://api.jikan.moe/v3/season/${year}/${getSeason(month)}`);\n//   const data = await res.json();\n//   console.log(data.anime[0].title);\n//   console.log('fetch:'+ year+' '+month);\n//   console.log(getSeason(month));\n//   if (data) {\n//       var animeArr = data.anime.map(anime => ({\n//         title: anime.title,\n//         url: anime.url,\n//         desc: anime.synopsis,\n//         start: anime.airing_start,\n//         end: anime.airing_start,\n//         image: anime.image_url,\n//         score: anime.score\n//       }\n//     ));\n//     return {\n//       props:{\n//         relData: data.anime,\n//         animeArr,\n//       }\n//     };\n//   }\n//   else{\n//     console.log('error');\n//     return <div>Something is wrong!</div>;\n//   }\n//   console.log(data.anime[0].score);\n// };","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","useState","useEffect","fetch","Calendar","momentLocalizer","widgetMomentLocalizer","moment","Popover","makeStyles","ReactSVG","FormGroup","FormControlLabel","DatePicker","events","Header","Footer","Dailies","IconSvg","purple","red","Switch","eventStyles","styles","Hidden","calStyles","shadows","color","getSeason","locale","localizer","useStyles","theme","popover","pointerEvents","paper","width","height","position","overflow","padding","spacing","fontFamily","darkbg","background","MyCalendar","props","state","setState","isDark","currDate","setCurrDate","Date","hasError","setErrors","data","setData","anime","handleChange","event","target","name","checked","year","getFullYear","month","getMonth","animeArr","textTheme","bgTheme","console","log","fetchData","res","json","then","catch","err","map","title","url","desc","synopsis","start","airing_start","end","image","image_url","score","getCustomToolbar","toolbar","goToBack","mDate","date","newDate","onNavigate","goToNext","goToCurrent","now","setMonth","setYear","datePicker","CustomCalendarIcon","forwardRef","onClick","ref","test","value","EventPop","classes","anchorEl","setAnchorEl","handlePopoverOpen","currentTarget","handlePopoverClose","open","Boolean","vertical","horizontal","onMouseEnter","onMouseLeave","bind","blur","screen","description","bgc","light","toDate","isSelected","newStyle","backgroundColor","style"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport widgetMomentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment'\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ReactSVG } from 'react-svg';\r\n//import  { useState } from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n//import React, { useState, useEffect } from \"react\";\r\n//import DatePicker from 'react-datepicker';\r\nimport DatePicker from 'react-widgets/lib/DateTimePicker';\r\n//My Components\r\nimport events from '../assets/events.js'\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Dailies from '../components/Dailies.js'\r\n//import calIcon from '../assets/img/calIcon.png'\r\nimport IconSvg from '../assets/img/score_icon.svg';\r\nimport { purple, red } from '@material-ui/core/colors';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport eventStyles from '../assets/css/custEvents.module.css'\r\n//My Styles\r\nimport styles from '../assets/css/main.module.css'\r\nimport { Hidden } from '@material-ui/core';\r\nimport calStyles from '../assets/css/rbc.module.css';\r\nimport shadows from '@material-ui/core/styles/shadows';\r\nimport color from '@material-ui/core/colors/amber';\r\nimport {getSeason} from '../assets/Helpers';\r\n\r\nmoment.locale('en');\r\nwidgetMomentLocalizer();\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    width: '235px', //Width of MAL images\r\n    height:'430px',\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0.6),\r\n    pointerEvents: 'auto',\r\n    fontFamily: 'Dosis',\r\n    \r\n  },\r\n  darkbg:{\r\n    width: '235px', //Width of MAL images\r\n    height:'430px',\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(0.6),\r\n    pointerEvents: 'auto',\r\n    fontFamily: 'Dosis',\r\n    background: '#2f3136',\r\n    color: '#f2f3f5'\r\n  },\r\n  \r\n}))\r\n\r\nconst MyCalendar = props => {\r\n  \r\n  const [state, setState] = useState({isDark: false});\r\n  const [currDate, setCurrDate] = useState(new Date());\r\n  const [hasError, setErrors] = useState(false);\r\n  const [data, setData] = useState({ anime: [] });\r\n  \r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  }; \r\n\r\n  var year = currDate.getFullYear();\r\n  var month = currDate.getMonth()+1;\r\n  var animeArr;\r\n  var textTheme = state.isDark ? 'dark-text':'light-text';\r\n  var bgTheme = state.isDark ? 'dark-bg':'light-bg';\r\n  \r\n  console.log(year);\r\n  console.log(month);\r\n  \r\n  async function fetchData() {\r\n    const res = await fetch(`https://api.jikan.moe/v3/season/${year}/${getSeason(month)}`);\r\n    //const res = await fetch(`https://api.jikan.moe/v3/season/archive`);\r\n    res\r\n        .json()\r\n        .then(res => setData(res))\r\n        .catch(err => setErrors(err));\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n      fetchData();\r\n\r\n  }, []);\r\n\r\n  animeArr = data.anime.map(anime => { \r\n    return {\r\n            title: anime.title,\r\n            url: anime.url,\r\n            desc: anime.synopsis,\r\n            start: anime.airing_start,\r\n            end: anime.airing_start,\r\n            image: anime.image_url,\r\n            score: anime.score\r\n          } \r\n        });\r\n  function getCustomToolbar(toolbar) {\r\n    \r\n    \r\n\r\n    const goToBack = () => {\r\n      \r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() - 1,\r\n        1);\r\n      toolbar.onNavigate('prev', newDate);\r\n      \r\n      fetchData();\r\n      setCurrDate(newDate);\r\n\r\n    }\r\n\r\n    const goToNext = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() + 1,\r\n        1);\r\n      toolbar.onNavigate('next', newDate);\r\n      \r\n      console.log(newDate.getMonth()+1);\r\n      \r\n      fetchData();\r\n      setCurrDate(newDate);\r\n    }\r\n\r\n    const goToCurrent = () => {\r\n      const now = new Date();\r\n      toolbar.date.setMonth(now.getMonth());\r\n      toolbar.date.setYear(now.getFullYear());\r\n      toolbar.date.onNavigate('current');\r\n      setCurrDate(now);\r\n    };\r\n    const datePicker = (date) => {\r\n      //toolbar.onNavigate(date);\r\n      setCurrDate(date);\r\n      fetchData();\r\n    }\r\n\r\n    // const monthLabel = () => {\r\n    //   const date = moment(setCurrDate(toolbar.date));\r\n    //   return (\r\n    //     <span className={textTheme}><b>{date.format('MMMM')}</b><span> {date.format('YYYY')}</span></span>\r\n    //   );\r\n    // };\r\n    //const [startDate, setStartDate] = useState(new Date());\r\n    const CustomCalendarIcon = React.forwardRef(({onClick}, ref) => (\r\n      <div ref={ref} onClick={onClick}>\r\n        <img src={\"./calIcon.png\"} />\r\n      </div>\r\n    ))\r\n    return (\r\n    \r\n      <>\r\n        \r\n        <div className=\"text-center align-center\" >\r\n          <div className=\"rbc-toolbar\" >\r\n            <div className=\"rbc-btn-group\" >\r\n                            \r\n              \r\n               \r\n              \r\n              <button className={bgTheme} type=\"button\" onClick={goToBack}>\r\n                <div className={\"prev-icon \"+ textTheme}>&#8249;</div>\r\n              </button>\r\n              <button className={bgTheme} type=\"button\" onClick={goToCurrent}>\r\n                <span className={\"next-icon \"+ textTheme}>Today</span>\r\n              </button>\r\n              <button className={bgTheme} type=\"button\" onClick={goToNext}>\r\n                <span className={\"next-icon \"+ textTheme}>&#8250;</span>\r\n              </button>\r\n            </div>\r\n          </div >\r\n         \r\n          <div className={\"rbc-btn-group \"+ styles.test}>\r\n            {/* <label>{monthLabel()}</label> */}\r\n            <DatePicker\r\n               className ={styles.test}\r\n                time={false}\r\n                value={currDate}\r\n                defaultView='year'\r\n                views={['year']}\r\n                onChange={value => datePicker(value)}\r\n                format='MMMM YYYY'\r\n                footer={false}\r\n                //showMonthYearPicker\r\n                //customInput={<CustomCalendarIcon />}\r\n              />\r\n              <br/>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n      </>\r\n    )\r\n  };\r\n  \r\n  //Move this into 'components'?\r\n  function EventPop(event) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handlePopoverOpen = event => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    \r\n    return (\r\n      <>\r\n        <div>\r\n          <div\r\n            onMouseEnter={handlePopoverOpen}\r\n            onMouseLeave={handlePopoverClose}\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup={true}\r\n          >\r\n            {event.title}\r\n\r\n          </div>\r\n          <Popover\r\n\r\n            className={classes.popover}\r\n            classes={state.isDark?{\r\n              paper: classes.darkbg\r\n              \r\n            }:{\r\n              paper: classes.paper \r\n            }}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n\r\n            disableRestoreFocus\r\n            // onClick={handlePopoverClose}\r\n            // onMouseLeave={handlePopoverClose}\r\n            PaperProps={{ onMouseEnter: handlePopoverOpen, onMouseLeave: handlePopoverClose }}\r\n          >\r\n\r\n            <div>\r\n              <div>\r\n                <a className={state.isDark?styles.title:null} href={event.event.url} target=\"_blank\">{event.title}</a>\r\n              </div>\r\n              <div>\r\n                <IconSvg />\r\n                {event.event.score}\r\n\r\n              </div>\r\n              <br />\r\n              <div>\r\n                \r\n                <div className={styles.bind}>\r\n                  \r\n                   <img src={event.event.image} alt={event.title} className={styles.blur}/>\r\n                   <div className={state.isDark?null:styles.screen}></div>\r\n                 \r\n                \r\n                  <div className={styles.description}>\r\n                    {event.event.desc}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            \r\n\r\n\r\n\r\n            </div>\r\n\r\n          </Popover>\r\n        </div>\r\n      </>\r\n    )\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <>\r\n\r\n      <div className={`${styles.bgc} ${state.isDark ? styles.light : null}`}>\r\n        <Header isDark={state.isDark} />\r\n        <br/>    \r\n        <div className=\"grid-x text-center align-center\">\r\n          <div>\r\n            <h4 style={{fontFamily:'Dosis'}}>Released Today</h4>\r\n\r\n            <Dailies isDark={state.isDark}/>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className={\"grid-container\"}>\r\n          \r\n          <Calendar\r\n            \r\n            style={{ height: 650 }}\r\n\r\n            tooltipAccessor={null}\r\n            popup\r\n            localizer={localizer}\r\n            events={animeArr}\r\n            //events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            date = {currDate}\r\n            onNavigate = {date => setCurrDate(date)}\r\n            defaultDate={moment().toDate()}\r\n            eventPropGetter={\r\n              (event, start, end, isSelected) =>{\r\n                var newStyle= {backgroundColor: 'rgba(31, 125, 247, 0.7)'};\r\n\r\n                if(state.isDark){\r\n                  newStyle.backgroundColor = 'rgba(175, 16, 43, 0.89)'\r\n                };\r\n\r\n                return{\r\n                  \r\n                  style: newStyle\r\n                };\r\n              }\r\n            }\r\n            dayPropGetter={\r\n              (event, start, end, isSelected) =>{\r\n                var newStyle= {backgroundColor: 'rgba(255,255,255)'};\r\n\r\n                if(state.isDark){\r\n                  newStyle.backgroundColor = '#36393f'\r\n                };\r\n\r\n                return{\r\n                  \r\n                  style: newStyle\r\n                };\r\n              }\r\n            }\r\n            components={{\r\n              event: EventPop,\r\n              //event: EventAgenda,\r\n              toolbar: getCustomToolbar\r\n            }}\r\n\r\n          />\r\n          \r\n        </div>\r\n        <br />\r\n        <br />\r\n        \r\n        <Footer isDark={state.isDark} name=\"isDark\" change={handleChange}/>\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\nexport default MyCalendar;\r\n// export const getServerSideProps = async function () {\r\n//   const year = new Intl.DateTimeFormat('en', {year:'numeric'}).format(dateForFetch);\r\n//   const month = new Intl.DateTimeFormat('en', { month: 'long' }).format(dateForFetch);\r\n\r\n//   const res = await fetch(`https://api.jikan.moe/v3/season/${year}/${getSeason(month)}`);\r\n//   const data = await res.json();\r\n//   console.log(data.anime[0].title);\r\n//   console.log('fetch:'+ year+' '+month);\r\n//   console.log(getSeason(month));\r\n//   if (data) {\r\n//       var animeArr = data.anime.map(anime => ({\r\n//         title: anime.title,\r\n//         url: anime.url,\r\n//         desc: anime.synopsis,\r\n//         start: anime.airing_start,\r\n//         end: anime.airing_start,\r\n//         image: anime.image_url,\r\n//         score: anime.score\r\n//       }\r\n\r\n//     ));\r\n//     return {\r\n   \r\n//       props:{\r\n//         relData: data.anime,\r\n//         animeArr,\r\n        \r\n//       }\r\n//     };\r\n//   }\r\n//   else{\r\n//     console.log('error');\r\n//     return <div>Something is wrong!</div>;\r\n//   }\r\n//   console.log(data.anime[0].score);\r\n  \r\n// };\r\n\r\n"]},"metadata":{},"sourceType":"module"}