{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react'; //import Layout from '../components/MyLayout.js';\n//import Link from 'next/link';\n\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport Popover from '@material-ui/core/Popover'; //import MyCalendar from '../components/Calendar.js'\n\nimport MouseOverPopover from '../components/popover.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography'; //import { Popover } from '@material-ui/core';\n\nimport Button from '@material-ui/core/Button';\nconst localizer = momentLocalizer(moment);\nconst useStyles = makeStyles(theme => ({\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1),\n    pointerEvents: 'auto'\n  }\n}));\n\nconst MyCalendar = props => {\n  function getCustomToolbar(toolbar) {\n    this.toolbarDate = toolbar.date;\n\n    const goToMonthView = () => {\n      toolbar.onViewChange('month');\n      setTimeout(() => {\n        this.setOffRangeDateStyle();\n      }, 100);\n    };\n\n    const goToBack = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() - 1, 1);\n      toolbar.onNavigate('prev', newDate);\n      this.getCalendarEvents(newDate);\n    };\n\n    const goToNext = () => {\n      let mDate = toolbar.date;\n      let newDate = new Date(mDate.getFullYear(), mDate.getMonth() + 1, 1);\n      toolbar.onNavigate('next', newDate);\n      this.getCalendarEvents(newDate);\n    };\n\n    __jsx(\"div\", {\n      className: \"toolbar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"navigation-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-back\",\n      onClick: goToBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(BackIcon, {\n      className: \"prev-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      className: \"btn btn-next\",\n      onClick: goToNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(NextIcon, {\n      className: \"next-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      className: \"label-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.monthLabel)), __jsx(\"div\", {\n      className: \"filter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"bg-filter-off\",\n      onClick: goToMonthView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"label-filter-off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Month\"))));\n  }\n\n  function EventPop(event) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handlePopoverOpen = event => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      onMouseEnter: handlePopoverOpen,\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, event.title), __jsx(Popover, {\n      id: \"simple-menu\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      disableRestoreFocus: true,\n      onMouseLeave: handlePopoverClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, event.title, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      src: event.event.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })))));\n  }\n\n  ;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    style: {\n      height: 600\n    },\n    tooltipAccessor: null,\n    popup: true,\n    localizer: localizer,\n    events: props.animeArr,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    defaultDate: moment().toDate(),\n    components: {\n      event: EventPop\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })));\n};\n\nMyCalendar.getInitialProps = async function () {\n  const res = await fetch('https://api.jikan.moe/v3/season/');\n  const data = await res.json(); //Make Date Object work with event\n\n  var animeArr = data.anime.map(anime => ({\n    title: anime.title,\n    start: anime.airing_start,\n    end: anime.airing_start,\n    image: anime.image_url\n  }));\n  console.log(`${animeArr[0].image}`);\n  console.log(`${animeArr[0].title}`);\n  return {\n    animeArr\n  };\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","fetch","Calendar","momentLocalizer","moment","Popover","MouseOverPopover","makeStyles","Typography","Button","localizer","useStyles","theme","popover","pointerEvents","paper","padding","spacing","MyCalendar","props","getCustomToolbar","toolbar","toolbarDate","date","goToMonthView","onViewChange","setTimeout","setOffRangeDateStyle","goToBack","mDate","newDate","Date","getFullYear","getMonth","onNavigate","getCalendarEvents","goToNext","state","monthLabel","EventPop","event","classes","anchorEl","setAnchorEl","useState","handlePopoverOpen","currentTarget","handlePopoverClose","open","Boolean","title","vertical","horizontal","image","height","animeArr","toDate","getInitialProps","res","data","json","anime","map","start","airing_start","end","image_url","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import Layout from '../components/MyLayout.js';\r\n//import Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport Popover from '@material-ui/core/Popover';\r\n//import MyCalendar from '../components/Calendar.js'\r\nimport MouseOverPopover from '../components/popover.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import { Popover } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  popover: {\r\n    pointerEvents: 'none',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    pointerEvents: 'auto'\r\n  },\r\n}))\r\n\r\nconst MyCalendar = props => {\r\n  function getCustomToolbar(toolbar)\r\n  {\r\n    this.toolbarDate = toolbar.date;\r\n\r\n    const goToMonthView = () => {\r\n      toolbar.onViewChange('month');\r\n      \r\n        setTimeout(() => {\r\n          this.setOffRangeDateStyle();\r\n        }, 100)\r\n      \r\n      }\r\n    const goToBack = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() - 1,\r\n        1);\r\n      toolbar.onNavigate('prev', newDate);\r\n      this.getCalendarEvents(newDate);\r\n    \r\n    }\r\n    const goToNext = () => {\r\n      let mDate = toolbar.date;\r\n      let newDate = new Date(\r\n        mDate.getFullYear(),\r\n        mDate.getMonth() + 1,\r\n        1);\r\n      toolbar.onNavigate('next', newDate);\r\n      this.getCalendarEvents(newDate);\r\n    \r\n    }\r\n    <div className=\"toolbar-container\">\r\n    <div className=\"navigation-buttons\">\r\n      <button className=\"btn btn-back\" onClick={goToBack}>\r\n        <BackIcon className='prev-icon' />\r\n      </button>\r\n      <button className=\"btn btn-next\" onClick={goToNext}>\r\n        <NextIcon className='next-icon' />\r\n      </button>\r\n      <label className='label-date'>{this.state.monthLabel}</label>\r\n    </div>\r\n    <div className=\"filter-container\">\r\n      \r\n      <button className=\"bg-filter-off\" onClick={goToMonthView}><span className=\"label-filter-off\">Month</span></button>\r\n    </div>\r\n  </div >\r\n  }\r\n  function EventPop(event) {\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handlePopoverOpen = event => {\r\n      setAnchorEl(event.currentTarget);\r\n\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    return (\r\n      <>\r\n        <div>\r\n        <div\r\n          onMouseEnter={handlePopoverOpen}\r\n          \r\n          aria-controls=\"simple-menu\" \r\n          aria-haspopup={true}\r\n        >\r\n          {event.title}\r\n          \r\n        </div>\r\n        <Popover\r\n            id='simple-menu'\r\n            className={classes.popover}\r\n            classes={{\r\n              paper: classes.paper,\r\n            }}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n\r\n            disableRestoreFocus\r\n            \r\n            onMouseLeave={handlePopoverClose}\r\n          >\r\n            <div>\r\n              \r\n              \r\n              {event.title}\r\n              <br />\r\n              <img src={event.event.image} />\r\n            </div>\r\n          </Popover>\r\n            </div>\r\n      </>\r\n    )\r\n\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n\r\n\r\n        <Calendar\r\n          style={{height: 600}}\r\n          \r\n          tooltipAccessor={null}\r\n          popup\r\n          localizer={localizer}\r\n          events={props.animeArr}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          \r\n          defaultDate={moment().toDate()}\r\n          \r\n          components={{ event: EventPop }}\r\n\r\n        />\r\n\r\n      \r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nMyCalendar.getInitialProps = async function () {\r\n  const res = await fetch('https://api.jikan.moe/v3/season/');\r\n  const data = await res.json();\r\n\r\n  //Make Date Object work with event\r\n  var animeArr = data.anime.map(anime => ({\r\n    title: anime.title,\r\n    start: anime.airing_start,\r\n    end: anime.airing_start,\r\n    image: anime.image_url\r\n  }\r\n\r\n  ));\r\n  console.log(`${animeArr[0].image}`);\r\n  console.log(`${animeArr[0].title}`);\r\n  return {\r\n    animeArr\r\n\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}