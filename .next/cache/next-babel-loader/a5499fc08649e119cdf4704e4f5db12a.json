{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\components\\\\Dailies.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport moment from 'moment';\nimport styles from '../assets/css/dailies.module.css';\n\nvar Dailies = function Dailies() {\n  var _useState = useState(false),\n      hasError = _useState[0],\n      setErrors = _useState[1];\n\n  var _useState2 = useState({\n    anime: []\n  }),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var today = new Date();\n  var dailyArr;\n\n  function fetchData() {\n    var res;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.jikan.moe/v3/season'));\n\n          case 2:\n            res = _context.sent;\n            res.json().then(function (res) {\n              return setData(res);\n            })[\"catch\"](function (err) {\n              return setErrors(err);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  function formatDate(date) {\n    var newDate = new moment(date);\n    return newDate.format('MM/DD/YYYY');\n  }\n\n  dailyArr = data.anime.filter(function (anime) {\n    if (formatDate(anime.airing_start) !== formatDate(today)) {\n      return false;\n    }\n\n    return true;\n  }).map(function (anime) {\n    return anime;\n  });\n\n  if (dailyArr.length == 0) {\n    return __jsx(\"div\", {\n      className: styles.altmsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"*No anime released today :(\");\n  }\n\n  console.log(dailyArr);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: styles.noBullet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, dailyArr.map(function (anime) {\n    return __jsx(\"li\", {\n      key: anime.mal_id,\n      className: styles.formatList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card\",\n      style: {\n        width: 225 + 'px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: styles.carddimension,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: anime.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, anime.title)), __jsx(\"img\", {\n      src: anime.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  })));\n};\n\nexport default Dailies;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/components/Dailies.js"],"names":["React","useState","useEffect","fetch","moment","styles","Dailies","hasError","setErrors","anime","data","setData","today","Date","dailyArr","fetchData","res","json","then","err","formatDate","date","newDate","format","filter","airing_start","map","length","altmsg","console","log","noBullet","mal_id","formatList","width","carddimension","url","title","image_url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport fetch from 'isomorphic-unfetch';\r\nimport moment from 'moment'\r\nimport styles from '../assets/css/dailies.module.css'\r\n\r\nconst Dailies = () => {\r\n    const [hasError, setErrors] = useState(false);\r\n    const [data, setData] = useState({ anime: [] });\r\n    const today = new Date();\r\n\r\n    var dailyArr;\r\n    async function fetchData() {\r\n        const res = await fetch('https://api.jikan.moe/v3/season');\r\n        res\r\n            .json()\r\n            .then(res => setData(res))\r\n            .catch(err => setErrors(err));\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    function formatDate(date) {\r\n        var newDate = new moment(date);\r\n        return newDate.format('MM/DD/YYYY');\r\n    }\r\n\r\n    dailyArr = data.anime.filter(anime => {\r\n        if (formatDate(anime.airing_start) !== formatDate(today)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }).map(anime => { return anime });\r\n\r\n    if (dailyArr.length == 0) {\r\n        return <div className={styles.altmsg}>*No anime released today :(</div>\r\n    }\r\n\r\n    console.log(dailyArr);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* <p>{dataArr[0].title}</ p> */}\r\n            <ul className={styles.noBullet}>\r\n                {dailyArr.map(anime => (\r\n\r\n                    <li key={anime.mal_id} className={styles.formatList}>\r\n                        <div className=\"card\" style={{width: 225 + 'px'}}>\r\n                            \r\n                            <div className={styles.carddimension}>\r\n                                <a href={anime.url}>{anime.title}</a>\r\n                            </div>\r\n                            <img src={anime.image_url} />\r\n                        </div>\r\n                    </li>\r\n\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Dailies;"]},"metadata":{},"sourceType":"module"}