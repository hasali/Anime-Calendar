{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Hassan\\\\Documents\\\\Projects\\\\AnimeCalendar\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nvar localizer = momentLocalizer(moment); //import MyCalendar from '../components/Calendar.js'\n\nvar MyCalendar = function MyCalendar(props) {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Calendar, {\n    localizer: localizer // events = {props.shows.map((anime) =>{\n    //         [\n    //             {\n    //                 'title':anime.title,\n    //                 'start':anime.airing_start,\n    //                 'end':anime.airing_start\n    //             }\n    //         ]\n    // })}\n    // events={[{\n    //     'title': 'test',\n    //     'start': new Date(),\n    //     'end': new Date()\n    // }]}\n    ,\n    events: props.animeArr,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    defaultDate: moment().toDate(),\n    style: {\n      height: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })));\n};\n\nMyCalendar.getInitialProps = function _callee() {\n  var res, data, animeArr;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.jikan.moe/v3/season/2020/winter'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          //console.log(`Show data fetched. Count: ${data.length}`);\n          animeArr = data.anime.map(function (anime) {\n            return {\n              title: anime.title,\n              start: anime.airing_start,\n              end: anime.airing_start\n            };\n          });\n          console.log(\"\".concat(animeArr[0].title));\n          return _context.abrupt(\"return\", {\n            animeArr: animeArr\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/Hassan/Documents/Projects/AnimeCalendar/pages/index.js"],"names":["React","Component","Layout","Link","fetch","Calendar","momentLocalizer","moment","localizer","MyCalendar","props","animeArr","toDate","height","getInitialProps","res","json","data","anime","map","title","start","airing_start","end","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,IAAMC,SAAS,GAAGF,eAAe,CAACC,MAAD,CAAjC,C,CACA;;AAEA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAEtB,4BAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,SAAS,EAAEF,SADf,CAEI;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAjBJ;AAkBI,IAAA,MAAM,EAAEE,KAAK,CAACC,QAlBlB;AAmBI,IAAA,aAAa,EAAC,OAnBlB;AAoBI,IAAA,WAAW,EAAC,KApBhB;AAqBI,IAAA,WAAW,EAAEJ,MAAM,GAAGK,MAAT,EArBjB;AAsBI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAtBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFA,CAFsB;AAAA,CAAxB;;AAgCAJ,UAAU,CAACK,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACTV,KAAK,CAAC,6CAAD,CADI;;AAAA;AACrBW,UAAAA,GADqB;AAAA;AAAA,2CAERA,GAAG,CAACC,IAAJ,EAFQ;;AAAA;AAErBC,UAAAA,IAFqB;AAI3B;AACIN,UAAAA,QALuB,GAKZM,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,UAAAD,KAAK;AAAA,mBAAI;AACrCE,cAAAA,KAAK,EAAEF,KAAK,CAACE,KADwB;AAErCC,cAAAA,KAAK,EAAEH,KAAK,CAACI,YAFwB;AAGrCC,cAAAA,GAAG,EAAEL,KAAK,CAACI;AAH0B,aAAJ;AAAA,WAApB,CALY;AAY3BE,UAAAA,OAAO,CAACC,GAAR,WAAed,QAAQ,CAAC,CAAD,CAAR,CAAYS,KAA3B;AAZ2B,2CAapB;AACHT,YAAAA,QAAQ,EAARA;AADG,WAboB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAiBA,eAAeF,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../components/MyLayout.js';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nconst localizer = momentLocalizer(moment);\r\n//import MyCalendar from '../components/Calendar.js'\r\n\r\nconst MyCalendar = props => (\r\n    \r\n  <>\r\n  {/* {console.log(props.shows)} */}\r\n  <div>\r\n      <Calendar\r\n          localizer={localizer}\r\n          // events = {props.shows.map((anime) =>{\r\n              \r\n          //         [\r\n          //             {\r\n          //                 'title':anime.title,\r\n          //                 'start':anime.airing_start,\r\n          //                 'end':anime.airing_start\r\n          //             }\r\n          //         ]\r\n              \r\n          // })}\r\n          // events={[{\r\n          //     'title': 'test',\r\n          //     'start': new Date(),\r\n          //     'end': new Date()\r\n          // }]}\r\n          events={props.animeArr}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          defaultDate={moment().toDate()}\r\n          style={{ height: 500 }}\r\n      />\r\n  </div>\r\n  </>\r\n);\r\nMyCalendar.getInitialProps = async function () {\r\n  const res = await fetch('https://api.jikan.moe/v3/season/2020/winter');\r\n  const data = await res.json();\r\n\r\n  //console.log(`Show data fetched. Count: ${data.length}`);\r\n  var animeArr = data.anime.map(anime =>({\r\n    title: anime.title,\r\n    start: anime.airing_start,\r\n    end: anime.airing_start\r\n  }\r\n\r\n  ));\r\n  console.log(`${animeArr[0].title}`);\r\n  return {\r\n      animeArr\r\n  };\r\n};\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}